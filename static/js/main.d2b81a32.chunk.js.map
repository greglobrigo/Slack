{"version":3,"sources":["components/Home/useLocalStorage.js","components/Chat/hooks.js","components/Home/hooks.js","components/Home/index.js","components/Chat/Loaders.js","components/Chat/FormDialoguesComponent.js","components/Chat/SignOutComponent.js","components/Chat/LeftSidebar.js","components/Chat/TopBarComponent.js","components/Chat/SnackbarComponent.js","components/Chat/ChatBodyComponent.js","components/Chat/RightSideBar.js","components/Chat/MainChatComponent.js","components/Chat/index.js","components/Routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["useLocalStorage","req1","req2","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Hooks","loading","setLoading","useEffect","setTimeout","setHeaders","setUserID","password","setPassword","secondPassword","setSecondPassword","email","setEmail","isRegistering","setIsRegistering","route","setRoute","isLoggedIn","signedOut","setUserStatus","passwordsDoNotMatch","invalidEmailFormat","emailIsEmpty","passwordIsEmpty","passwordTooShort","validInfo","setValidInfo","successful","failed","isRegister","setIsRegister","isLogin","setIsLogin","registerUser","axios","url","data","headers","method","then","resetUserInput","catch","transition","logIn","e","preventDefault","includes","res","id","register","length","theme","createTheme","SignIn","useHooks","to","className","color","size","up","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","Typography","variant","onClick","noValidate","mt","TextField","onChange","target","margin","fullWidth","label","type","autoFocus","Button","mb","backgroundColor","Grid","container","Link","style","cursor","align","Date","getFullYear","Loaders","userID","users","setUsers","channels","setChannels","message","setMessage","allMessagesRetrieved","setAllMessagesRetrieved","mobileOpen","setMobileOpen","searchResults","setSearchResults","selectedUser","setSelectedUser","channelMembers","setChannelMembers","home","channel","directMessage","usersDisplayed","setUsersDisplayed","userStatus","withoutCurrentUser","filter","user","uid","success","isCreateChannel","setIsCreateChannel","userInviteError","setUserInviteError","openChannel","setOpenChannel","openUsers","setOpenUsers","selectedChannel","setSelectedChannel","openSB","vertical","horizontal","stateSB","setStateSB","client","expiry","getCurrentTime","timeOutId","retrieveAllMessagesInAChannel","retrieveAllMessagesWithUser","userData","currentTime","currentDate","currentDateAndTime","setCurrentDateAndTime","d","weekday","Array","setInterval","time","toLocaleTimeString","hour","minute","currentDay","getDay","handleClickOpenChannel","inviteUserToAChannel","userEmail","handleClose","setValueFromForm","extractedId","member_id","errors","createNewChannelWithUser","channelName","name","user_ids","join","handleClickOpenUsers","handleDrawerToggle","createMessageInAChannel","receiver_id","receiver_class","body","intervalRetrieveMessages","clearTimeout","returnToHome","sortByEmail","val","sortedUsers","createDirectMessageToAUser","intervalRetrieveMessagesWithUser","retrieveChannelUsers","channel_members","map","user_id","filteredChannelMembers","signOut","FormDialoguesComponent","open","dialogTitleText","setGetChannel","setGetEmail","valueFromForm","Dialog","onClose","DialogTitle","pb","DialogContent","List","slice","ListItemButton","pl","ListItemText","primary","DialogActions","SignOutComponent","Avatar","toString","marginRight","toUpperCase","LeftSidebar","setHasScrolledUp","openForInviteUser","setOpenForInviteUser","openForSendDirectMessage","setOpenForSendDirectMessage","setOpen","Toolbar","justifyContent","fontSize","mr","disablePadding","handleClickOpen","TopBarComponent","drawerWidth","AppBar","position","width","sm","ml","IconButton","edge","paddingRight","SnackBarComponent","messageSB","Snackbar","autoHideDuration","anchorOrigin","ChatBodyComponent","getChannel","getEmail","hasScrolledUp","lastMessage","useRef","onscroll","current","scrollIntoView","behavior","idx","ref","undefined","padding","sender","split","moment","created_at","fromNow","autoComplete","onSubmit","RightSideBar","Drawer","flexShrink","boxSizing","anchor","Divider","ListSubheader","overflowX","ListItem","textAlign","MainChatComponent","isAChannelSelected","ModalProps","keepMounted","xs","Index","Routes","exact","path","Home","Chat","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2b81a32.chunk.js","sourcesContent":["import {useState} from 'react';\r\n\r\n// Hook\r\nfunction useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = (value) => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  export default useLocalStorage;","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport useLocalStorage from \"../Home/useLocalStorage.js\";\r\n\r\nvar req1;\r\nvar req2;\r\n\r\nconst Hooks = () => {\r\n  const [headers] = useLocalStorage(\"headers\", []);\r\n  const [userID] = useLocalStorage(\"userID\", []);\r\n  const [users, setUsers] = useState([]);\r\n  const [channels, setChannels] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [allMessagesRetrieved, setAllMessagesRetrieved] = useState([]);\r\n  const [mobileOpen, setMobileOpen] = useState(false);  \r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState([]);\r\n  const [channelMembers, setChannelMembers] = useState([])\r\n  const [usersDisplayed, setUsersDisplayed] = useState({home: true, channel: false, directMessage: false})  \r\n  const [userStatus, setUserStatus] = useLocalStorage('status', {\r\n    isLoggedIn: false,\r\n    signedOut: false,\r\n  })\r\n  \r\n  const withoutCurrentUser = users.filter(\r\n    (user) => !user.email.includes(headers.uid)\r\n  );\r\n  const [isCreateChannel, setIsCreateChannel] = useState({\r\n    success: false,\r\n    failed: false,\r\n  });\r\n\r\n  const [userInviteError, setUserInviteError] = useState(\"\");\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const [openChannel, setOpenChannel] = useState(false);\r\n  const [openUsers, setOpenUsers] = useState(false);\r\n\r\n  const handleClickOpenChannel = () => {\r\n    setOpenChannel(!openChannel);\r\n  };\r\n\r\n  const handleClickOpenUsers = () => {\r\n    setOpenUsers(!openUsers);\r\n  };\r\n\r\n  const [selectedChannel, setSelectedChannel] = useState([]);\r\n\r\n  const [stateSB, setStateSB] = useState({\r\n    openSB: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\"\r\n  });\r\n\r\n  useEffect(() => {    \r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getAllUsers = () => {\r\n      axios({\r\n        url: \"https://slackapi.avionschool.com/api/v1/users\",\r\n        data: {},\r\n        method: \"GET\",\r\n        headers: {\r\n          \"access-token\": headers[\"access-token\"],\r\n          client: headers.client,\r\n          expiry: headers.expiry,\r\n          uid: headers.uid,\r\n        },\r\n      })\r\n        .then((res) => {setUsers(res.data.data)})\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    getAllUsers();\r\n\r\n    const retrieveChannels = () => {\r\n      axios({\r\n        url: \"https://slackapi.avionschool.com/api/v1/channels\",\r\n        data: {},\r\n        method: \"GET\",\r\n        headers: {\r\n          \"access-token\": headers[\"access-token\"],\r\n          client: headers.client,\r\n          expiry: headers.expiry,\r\n          uid: headers.uid,\r\n        },\r\n      })\r\n        .then((res) => setChannels(res.data.data))\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    retrieveChannels();\r\n    getCurrentTime();\r\n  }, [headers]);\r\n\r\n  const retrieveChannels = () => {\r\n    axios({\r\n      url: \"https://slackapi.avionschool.com/api/v1/channels\",\r\n      data: {},\r\n      method: \"GET\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        client: headers.client,\r\n        expiry: headers.expiry,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then((res) => setChannels(res.data.data))\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const intervalRetrieveMessages = (id) => {    \r\n    clearTimeout(req1);\r\n    clearTimeout(req2);    \r\n    setSelectedUser([]);\r\n    retrieveAllMessagesInAChannel(id);  \r\n      req1 = setInterval(() => {\r\n        retrieveAllMessagesInAChannel(id);\r\n      }, 1500);  \r\n  };\r\n\r\n  const retrieveAllMessagesInAChannel = (id) => {\r\n    axios({\r\n      url: `https://slackapi.avionschool.com/api/v1/messages?receiver_id=${id}&receiver_class=Channel`,\r\n      data: {},\r\n      method: \"GET\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then((res) => {setAllMessagesRetrieved(res.data.data); })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n    //INVITE USER TO A CHANNEL\r\n  const inviteUserToAChannel = (userEmail, handleClose, setValueFromForm) => {\r\n    const extractedId = users.filter(user=>user.email===userEmail) \r\n\r\n    axios({\r\n      url: \"https://slackapi.avionschool.com/api/v1/channel/add_member\",\r\n      data: {\r\n        id: `${selectedChannel.id}`,\r\n        member_id: `${extractedId[0]?.id}`,\r\n      },\r\n      method: \"POST\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        uid: headers.uid,\r\n        client: headers.client,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.errors) {\r\n          setUserInviteError(res.data.errors);            \r\n        } else {\r\n          setStateSB({ ...stateSB, openSB: true });          \r\n          setValueFromForm('')\r\n          setUserInviteError(\"\");\r\n          handleClose();\r\n        }\r\n        console.log(res);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n\r\n  //CREATE NEW CHANNEL\r\n   const createNewChannelWithUser = (channelName, handleClose, setValueFromForm) => {\r\n    axios({\r\n      url: \"https://slackapi.avionschool.com/api/v1/channels\",\r\n      data: {\r\n        name: `${channelName}`,\r\n        user_ids: [userID],\r\n      },\r\n      method: \"POST\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        retrieveChannels();\r\n        if (res.data.data?.id) {\r\n          setStateSB({ ...stateSB, openSB: true });                \r\n          handleClose();\r\n          setValueFromForm(\"\");\r\n          \r\n        } else {\r\n          const errors = res.data.errors;\r\n          setIsCreateChannel({ failed: [...errors].join(\". \") })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const createMessageInAChannel = (message) => {\r\n    axios({\r\n      url: `https://slackapi.avionschool.com/api/v1/messages`,\r\n      data: {\r\n        receiver_id: `${selectedChannel.id}`,\r\n        receiver_class: \"Channel\",\r\n        body: `${message}`,\r\n      },\r\n      method: \"POST\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then(retrieveAllMessagesInAChannel(selectedChannel.id))\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const retrieveAllMessagesWithUser = (userData) => {\r\n    axios({\r\n      url: `https://slackapi.avionschool.com/api/v1/messages?receiver_id=${userData.id}&receiver_class=User`,\r\n      method: \"GET\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setAllMessagesRetrieved(res.data.data)\r\n        // console.log(res);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const intervalRetrieveMessagesWithUser = (userData) => {\r\n    setUsersDisplayed({home: false, channel: false, directMessage: true})\r\n    clearTimeout(req1);\r\n    clearTimeout(req2);\r\n    setSelectedChannel([]);\r\n    setSelectedUser(userData);\r\n    retrieveAllMessagesWithUser(userData);\r\n    setSearchResults([]);\r\n         req2 = setInterval(() => {\r\n        retrieveAllMessagesWithUser(userData);\r\n      }, 1500);  \r\n  };\r\n\r\n  const createDirectMessageToAUser = (message) => {\r\n    axios({\r\n      url: `https://slackapi.avionschool.com/api/v1/messages`,\r\n      data: {\r\n        receiver_id: `${selectedUser.id}`,\r\n        receiver_class: \"User\",\r\n        body: `${message}`,\r\n      },\r\n      method: \"POST\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  const retrieveChannelUsers = (id) => {\r\n\r\n    axios({\r\n      url: `https://slackapi.avionschool.com/api/v1/channels/${id}`,\r\n      method: \"GET\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then((res) => {        \r\n        const channelMembers = res.data.data.channel_members.map(val=>val.user_id)        \r\n        const filteredChannelMembers = users.filter(user=>channelMembers.includes(user.id))        \r\n        setChannelMembers(filteredChannelMembers)\r\n        setUsersDisplayed({home: false, channel: true, directMessage: false})      \r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n  const returnToHome = () => {\r\n    setUsersDisplayed({home: true, channel: false, directMessage: false})\r\n    clearTimeout(req1);\r\n    clearTimeout(req2);\r\n    setAllMessagesRetrieved([]);\r\n    setSelectedChannel([]);\r\n    setSelectedUser([]);\r\n  };\r\n\r\n  const signOut = () => {    \r\n    setUsersDisplayed({home: true, channel: false, directMessage: false})      \r\n    clearTimeout(req1);\r\n    clearTimeout(req2);\r\n    setAllMessagesRetrieved([]);\r\n    setSelectedChannel([]);\r\n    setSelectedUser([]);    \r\n    setUserStatus({isLoggedIn: false, signedOut: true})    \r\n  }\r\n\r\n  let timeOutId  \r\n  const sortByEmail = (val) => {\r\n    if (val.length > 0) {  \r\n    timeOutId = setTimeout(() => {\r\n    if(timeOutId) {\r\n      clearTimeout(timeOutId)      \r\n    }\r\n      const sortedUsers = withoutCurrentUser.filter((value) =>\r\n        value.email.includes(val)\r\n      );\r\n      setSearchResults(sortedUsers);\r\n    }, 1000);\r\n  } else {    \r\n    setSearchResults(null)    \r\n  }\r\n}\r\n\r\n\r\n\r\n  const [currentDateAndTime, setCurrentDateAndTime] = useState({\r\n    currentTime: \"\",\r\n    currentDate: \"\",\r\n  });\r\n\r\n  const getCurrentTime = () => {\r\n    var d = new Date();\r\n    var weekday = new Array(7);\r\n    weekday[0] = \"Sunday\";\r\n    weekday[1] = \"Monday\";\r\n    weekday[2] = \"Tuesday\";\r\n    weekday[3] = \"Wednesday\";\r\n    weekday[4] = \"Thursday\";\r\n    weekday[5] = \"Friday\";\r\n    weekday[6] = \"Saturday\";\r\n    setInterval(() => {\r\n      const time = new Date().toLocaleTimeString([], {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      });\r\n      var currentDay = weekday[d.getDay()];\r\n      setCurrentDateAndTime({ currentTime: time, currentDate: currentDay });\r\n    }, 1000);\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    headers,\r\n    users,\r\n    channels,\r\n    handleClickOpenChannel,\r\n    openChannel,\r\n    inviteUserToAChannel,\r\n    createNewChannelWithUser,\r\n    handleClickOpenUsers,\r\n    openUsers,\r\n    handleDrawerToggle,\r\n    mobileOpen,\r\n    allMessagesRetrieved,\r\n    message,\r\n    setMessage,\r\n    selectedChannel,\r\n    setSelectedChannel,\r\n    createMessageInAChannel,\r\n    intervalRetrieveMessages,\r\n    userID,\r\n    returnToHome,\r\n    sortByEmail,\r\n    searchResults,\r\n    selectedUser,\r\n    createDirectMessageToAUser,\r\n    intervalRetrieveMessagesWithUser,\r\n    currentDateAndTime,\r\n    isCreateChannel,\r\n    setIsCreateChannel,\r\n    userInviteError,\r\n    setUserInviteError,\r\n    stateSB,\r\n    setStateSB,\r\n    retrieveChannelUsers,\r\n    channelMembers,\r\n    usersDisplayed,\r\n    signOut,\r\n    userStatus,\r\n    setMobileOpen\r\n  };\r\n};\r\n\r\nexport default Hooks;\r\n","import {useState, useEffect} from 'react'\r\nimport axios from 'axios';\r\nimport useLocalStorage from './useLocalStorage';\r\n\r\nconst Hooks = () => {\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    setTimeout(() => {\r\n    setLoading(false)\r\n    }, 3000);\r\n  }, [])\r\n\r\n    const [headers, setHeaders] = useLocalStorage('headers', [])\r\n    const [userID, setUserID] = useLocalStorage('userID', []);\r\n    const [password, setPassword] = useState('')\r\n    const [secondPassword, setSecondPassword] = useState('')    \r\n    const [email, setEmail] = useState('')    \r\n    const [isRegistering, setIsRegistering] = useState(false)\r\n    const [route, setRoute] = useState(false)   \r\n    const [userStatus, setUserStatus] = useLocalStorage('status', {\r\n      isLoggedIn: false,\r\n      signedOut: false,\r\n    })\r\n    const [validInfo, setValidInfo] = useState({\r\n            passwordsDoNotMatch: false,\r\n            invalidEmailFormat: false,\r\n            emailIsEmpty: false,\r\n            passwordIsEmpty: false,\r\n            passwordTooShort: false,\r\n        })\r\n    const [isRegister, setIsRegister] = useState({\r\n           successful: false,\r\n           failed: false,           \r\n        })\r\n    const [isLogin, setIsLogin] = useState({\r\n           successful: false,\r\n           failed: false\r\n        })\r\n    \r\n        \r\n    const registerUser = () => {      \r\n\r\n         axios({      \r\n            url: 'https://slackapi.avionschool.com/api/v1/auth',\r\n            data: {'email': email,\r\n                  'password': password,\r\n                  'password_confirmation': secondPassword},\r\n            headers: {},\r\n            method: 'POST',\r\n            }).then(() => {                \r\n                setIsRegister({successful:true})                \r\n                resetUserInput()\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n                setIsRegister({failed: true})\r\n            })\r\n        \r\n    }\r\n\r\n    const register = (e) => {\r\n        e.preventDefault()\r\n        if(!email.includes(\"@\" && \".\")) {            \r\n        setValidInfo({invalidEmailFormat: true})}   \r\n            else if (!password || !secondPassword){\r\n            setValidInfo({passwordIsEmpty: true})}     \r\n                 else if (password !== secondPassword) {\r\n                setValidInfo({passwordsDoNotMatch: true})\r\n                    } else if (password.length < 6) {\r\n                      setValidInfo({passwordTooShort: true})\r\n                    }\r\n         else {         \r\n           registerUser()\r\n         }\r\n\r\n    }\r\n\r\n    const  loginUser = () =>{\r\n\r\n       axios({      \r\n        url: 'https://slackapi.avionschool.com/api/v1/auth/sign_in',\r\n        data: {'email': email,\r\n              'password': password},\r\n        headers: {},\r\n        method: 'POST',\r\n        }).then((res) => {          \r\n          setUserID(res.data.data.id)\r\n          setHeaders(res.headers)\r\n          transition()\r\n          resetUserInput()          \r\n        })   \r\n        .catch((error) => {\r\n            console.log(error)\r\n            setIsLogin({failed: true})\r\n        })         \r\n    }    \r\n \r\n   const logIn = (e) =>{   \r\n     e.preventDefault()  \r\n        if(!email) {\r\n        setValidInfo({emailIsEmpty: true})\r\n        } else if (!password){\r\n            setValidInfo({passwordIsEmpty: true}) \r\n            } else if(!email.includes(\"@\" && \".\")) {            \r\n             setValidInfo({invalidEmailFormat: true})                \r\n                } else { \r\n             loginUser()\r\n    }\r\n   } \r\n\r\n\r\n   const resetUserInput = () => {\r\n     setEmail('')\r\n     setPassword('')\r\n     setSecondPassword('')\r\n   }\r\n\r\n   const transition = () => {\r\n    setLoading(true)\r\n    setTimeout(() => {setLoading(false); setRoute(true)}, 2000)\r\n    setUserStatus({isLoggedIn: true, signedOut: false})\r\n   }\r\n\r\n    return {               \r\n        password,\r\n        setPassword,\r\n        email,\r\n        setEmail,                \r\n        logIn,                \r\n        setIsLogin,\r\n        isLogin,\r\n        isRegistering,\r\n        setIsRegistering,\r\n        secondPassword,\r\n        setSecondPassword,\r\n        register,\r\n        registerUser,\r\n        isRegister,\r\n        setIsRegister,\r\n        validInfo,\r\n        setValidInfo,\r\n        setLoading,\r\n        loading,\r\n        transition,\r\n        route,\r\n        setRoute,          \r\n    }   \r\n}\r\n\r\nexport default Hooks\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport useHooks from \"./hooks\";\r\nimport \"./styles.css\";\r\nimport { HashLoader } from \"react-spinners\";\r\nimport { Fade } from \"react-reveal\";\r\nimport { CgSlack } from \"react-icons/cg\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst theme = createTheme();\r\n\r\nexport const SignIn = () => {\r\n  const {\r\n    password,\r\n    setPassword,\r\n    secondPassword,\r\n    setSecondPassword,\r\n    email,\r\n    setEmail,\r\n    logIn,\r\n    isLogin,\r\n    setIsLogin,\r\n    isRegistering,\r\n    setIsRegistering,\r\n    register,\r\n    isRegister,\r\n    setIsRegister,\r\n    setValidInfo,\r\n    validInfo,\r\n    loading,\r\n    route,    \r\n} = useHooks() \r\n  \r\n  return (\r\n    <>\r\n      \r\n      {route && <Redirect to=\"/chat\" />}\r\n      {loading ? (\r\n        <>\r\n        \r\n          <div className=\"loader\">\r\n            <HashLoader loading={loading} color={\"purple\"} size={80} />\r\n            <h3>Loading...</h3>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n        <div className=\"background\"></div>\r\n          <Fade up>\r\n            <div className=\"heading-container\">\r\n              <span className=\"heading\">\r\n                <CgSlack />\r\n                Avion Slack App\r\n              </span>\r\n              <span className=\"website\">avionschool.slack.com</span>\r\n            </div>\r\n            <ThemeProvider theme={theme}>\r\n              <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <Box\r\n                  sx={{\r\n                    marginTop: 5,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Avatar sx={{ m: 1, bgcolor: \"purple\" }}></Avatar>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                    {isRegistering ? \"Register \" : \"Sign in\"}\r\n                  </Typography>\r\n                  <Box\r\n                    component=\"form\"\r\n                    onClick={() => {\r\n                      setIsLogin(false);\r\n                      setIsRegister(false);\r\n                      setValidInfo(false);\r\n                    }}\r\n                    noValidate\r\n                    sx={{ mt: 1 }}\r\n                  >\r\n                    <TextField\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      value={email}\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      label=\"Email Address\"\r\n                      type=\"text\"\r\n                      autoFocus\r\n                    />\r\n\r\n                    <TextField\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      value={password}\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                    />\r\n\r\n                    {isRegistering && (\r\n                      <Fade up>\r\n                        {\" \"}\r\n                        <TextField\r\n                          onChange={(e) => setSecondPassword(e.target.value)}\r\n                          value={secondPassword}\r\n                          margin=\"normal\"\r\n                          fullWidth\r\n                          label=\"Re-type Password\"\r\n                          type=\"password\"\r\n                        />{\" \"}\r\n                      </Fade>\r\n                    )}\r\n                    {isLogin.failed && (\r\n                      <span className=\"failed\">Invalid email or password</span>\r\n                    )}\r\n                    {isRegister.successful && (\r\n                      <span className=\"success\">Registration Success!</span>\r\n                    )}\r\n                    {isRegister.failed && (\r\n                      <span className=\"failed\">Email already taken</span>\r\n                    )}\r\n                    {validInfo.invalidEmailFormat && (\r\n                      <span className=\"failed\">Invalid email format</span>\r\n                    )}\r\n                    {validInfo.emailIsEmpty && (\r\n                      <span className=\"failed\">Email is required</span>\r\n                    )}\r\n                    {validInfo.passwordIsEmpty && (\r\n                      <span className=\"failed\">Password is required</span>\r\n                    )}\r\n                    {validInfo.passwordsDoNotMatch && (\r\n                      <span className=\"failed\">Passwords do not match</span>\r\n                    )}\r\n                  </Box>\r\n\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      isRegistering ? register(e) : logIn(e);\r\n                    }}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2, backgroundColor: \"purple\" }}\r\n                  >\r\n                    {isRegistering ? \"Sign up\" : \"Sign In\"}\r\n                  </Button>\r\n                  <Grid container>\r\n                    <Grid item>\r\n                      <Link\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => setIsRegistering(!isRegistering)}\r\n                        variant=\"body2\"\r\n                      >\r\n                        {isRegistering\r\n                          ? \"Already have an account? Sign in\"\r\n                          : \"Don't have an account? Sign Up\"}\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grid>               \r\n                </Box>\r\n                <Typography\r\n                  className=\"copyright\"\r\n                  variant=\"body2\"\r\n                  color=\"text.secondary\"\r\n                  align=\"center\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                  {\"Copyright © \"}\r\n                  <span color=\"inherit\">Avion School Slack App</span>{\" \"}\r\n                  {new Date().getFullYear()}\r\n                  {\".\"}\r\n                </Typography>\r\n              </Container>\r\n            </ThemeProvider>\r\n          </Fade>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","\r\nimport { HashLoader } from \"react-spinners\";\r\n\r\nconst Loaders = ({loading}) => {\r\n    return (\r\n        <>             \r\n        <div className=\"loader\">\r\n          <HashLoader loading={loading} color={\"purple\"} size={80}/> \r\n          <h3>Almost there...</h3>\r\n          </div> \r\n          </>\r\n    )\r\n}\r\n\r\nexport default Loaders\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\n\r\nconst FormDialoguesComponent = ({\r\n  open,\r\n  handleClose,\r\n  dialogTitleText,\r\n  inviteUserToAChannel,\r\n  label,\r\n  type,\r\n  createNewChannelWithUser,\r\n  intervalRetrieveMessagesWithUser,\r\n  sortByEmail,\r\n  searchResults,\r\n  isCreateChannel,\r\n  setIsCreateChannel,\r\n  userInviteError,\r\n  setUserInviteError,\r\n  setGetChannel,\r\n  setGetEmail\r\n  \r\n}) => {\r\n  const [valueFromForm, setValueFromForm] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle sx={{ pb: 1 }}>{dialogTitleText}</DialogTitle>\r\n        <DialogContent>\r\n          {sortByEmail && (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label={label}\r\n              type={type}\r\n              fullWidth\r\n              variant=\"standard\"\r\n              onChange={(e) => {\r\n                setValueFromForm(e.target.value);\r\n                sortByEmail(valueFromForm);\r\n              }}\r\n              value={valueFromForm}\r\n            />\r\n          )}\r\n\r\n          {searchResults && (\r\n            <List className=\"list-results\">\r\n              {searchResults.slice(0, 10).map((val) => {\r\n                return (\r\n                  <ListItemButton\r\n                    sx={{ pl: 4 }}\r\n                    key={val.id}\r\n                    onClick={() => {\r\n                      intervalRetrieveMessagesWithUser(val);\r\n                      handleClose();\r\n                      setValueFromForm(\"\");\r\n                    }}\r\n                  >\r\n                    <ListItemText primary={`${val.uid}`} />\r\n                  </ListItemButton>\r\n                );\r\n              })}\r\n            </List>\r\n          )}\r\n\r\n          {inviteUserToAChannel && (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label={label}\r\n              type={type}\r\n              fullWidth\r\n              variant=\"standard\"\r\n              onChange={(e) => {\r\n                setValueFromForm(e.target.value);\r\n              }}\r\n              value={valueFromForm}\r\n            />\r\n          )}\r\n\r\n          {userInviteError && (\r\n            <span style={{ color: \"red\" }}>{userInviteError}</span>\r\n          )}\r\n\r\n          {createNewChannelWithUser && (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label={label}\r\n              type={type}\r\n              fullWidth\r\n              variant=\"standard\"\r\n              onChange={(e) => {\r\n                setValueFromForm(e.target.value);\r\n              }}\r\n              value={valueFromForm}\r\n            />\r\n          )}\r\n          {isCreateChannel?.failed && (\r\n            <span style={{ color: \"red\" }}>{[...isCreateChannel.failed]}</span>\r\n          )}\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleClose();\r\n              setValueFromForm(\"\");\r\n              isCreateChannel && setIsCreateChannel(false);\r\n              userInviteError && setUserInviteError(\"\");\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          {inviteUserToAChannel && (\r\n            <Button\r\n              onClick={() => {\r\n                setGetEmail(valueFromForm)\r\n                inviteUserToAChannel(valueFromForm, handleClose, setValueFromForm)\r\n                setTimeout(() => {\r\n                setGetEmail('')\r\n              }, 4000);  \r\n              }}\r\n            >\r\n              Invite\r\n            </Button>\r\n          )}\r\n          {createNewChannelWithUser && (\r\n            <Button\r\n              sx={{ alignItems: \"center\" }}\r\n              onClick={() => {\r\n                setGetChannel(valueFromForm)\r\n                createNewChannelWithUser(valueFromForm, handleClose, setValueFromForm)\r\n                setTimeout(() => {\r\n                setGetChannel('')\r\n              }, 4000);                \r\n              }}\r\n            >\r\n              Create\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default FormDialoguesComponent;\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nexport default function SignOutComponent({open, handleClose, Avatar, signOut, headers}) {\r\n  const email = headers.uid.toString()\r\n\r\n\r\n  return (\r\n    <div>     \r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Are you sure want to sign out?\"}\r\n        </DialogTitle>\r\n        <DialogContent style={{display: 'flex', alignItems: 'center'}}> \r\n        <Avatar style={{marginRight: \"10px\", backgroundColor: \"purple\"}}>{`${email[0].toUpperCase()}`}</Avatar>\r\n        {email}\r\n        {/* {val.email.slice(0, 1).toUpperCase()} */}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>No</Button>\r\n          <Button onClick={()=>{signOut(); handleClose()}} autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ForumIcon from \"@mui/icons-material/Forum\";\r\nimport GroupAddIcon from \"@mui/icons-material/GroupAdd\";\r\nimport FormDialoguesComponent from \"./FormDialoguesComponent\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport GroupIcon from \"@mui/icons-material/Group\";\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport SignOutComponent from './SignOutComponent'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {GrClose} from 'react-icons/gr'\r\n\r\nconst LeftSidebar = ({\r\n  handleClickOpenChannel,\r\n  openChannel,\r\n  channels,\r\n  createNewChannelWithUser,\r\n  handleClickOpenUsers,\r\n  users,\r\n  openUsers,\r\n  setSelectedChannel,\r\n  intervalRetrieveMessages,\r\n  returnToHome,\r\n  sortByEmail,\r\n  searchResults,\r\n  intervalRetrieveMessagesWithUser,\r\n  isCreateChannel,\r\n  setIsCreateChannel,  \r\n  setGetChannel,\r\n  retrieveChannelUsers,  \r\n  userStatus,\r\n  headers,\r\n  signOut,\r\n  setMobileOpen,  \r\n  setHasScrolledUp,\r\n}) => {\r\n  const [openForInviteUser, setOpenForInviteUser] = useState(false);\r\n  const handleClickOpenForInviteUser = () => {\r\n    setOpenForInviteUser(true);\r\n  };\r\n  const handleCloseForInviteUser = () => {\r\n    setOpenForInviteUser(false);\r\n  };\r\n\r\n  const [openForSendDirectMessage, setOpenForSendDirectMessage] =\r\n    useState(false);\r\n  const handleClickOpenSendDirectMessage = () => {\r\n    setOpenForSendDirectMessage(true);\r\n  };\r\n  const handleCloseForSendDirectMessage = () => {\r\n    setOpenForSendDirectMessage(false);\r\n  };\r\n  //sign-out\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>   \r\n    {userStatus.signedOut && <Redirect to=\"/\" />}\r\n     <Toolbar style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}} sx={{bgcolor: \"purple\"}}>\r\n          <span style={{color: 'white'}}>Avion Slack App</span>\r\n           <GrClose className=\"toolbar-close-button\" onClick={()=>setMobileOpen(false)}/>\r\n     </Toolbar>  \r\n      <div className=\"sidebar-container channel-list\">\r\n      <div className=\"side-navigation\" style={{backgroundColor:\"#b491c8\"}}> \r\n      <List>\r\n\r\n          <ListItemButton className=\"side-navigation-item\" onClick={() => {returnToHome();}}>            \r\n          <HomeIcon />              \r\n          <span style={{fontSize:\"0.75rem\"}}>  \r\n          Home\r\n          </span>                \r\n          </ListItemButton>\r\n\r\n          <ListItemButton className=\"side-navigation-item\" onClick={() => handleClickOpenForInviteUser()}>\r\n            <GroupAddIcon />                      \r\n            <span style={{fontSize:\"0.75rem\"}}>  \r\n            Add\r\n          </span> \r\n          <span style={{fontSize:\"0.75rem\"}}>  \r\n            Channel\r\n          </span> \r\n          </ListItemButton>\r\n          \r\n          <ListItemButton className=\"side-navigation-item\" onClick={() => handleClickOpenSendDirectMessage()}>            \r\n              <ForumIcon />    \r\n          <span style={{fontSize:\"0.75rem\"}}>  \r\n          Direct\r\n          </span> \r\n          <span style={{fontSize:\"0.75rem\"}}>  \r\n             Message\r\n          </span>        \r\n          </ListItemButton>\r\n\r\n     </List>\r\n\r\n     <List>\r\n\r\n     <ListItemButton className=\"side-navigation-item sign-out-button\" onClick={() => {setOpen(true)}}>            \r\n          <LogoutIcon />              \r\n          <span>\r\n          Sign Out\r\n          </span>                \r\n          </ListItemButton>\r\n     </List>      \r\n\r\n        </div>\r\n\r\n      <div className=\"main-sidebar\">    \r\n        <List>   \r\n            <div style={{display: 'flex'}}>                   \r\n              <GroupIcon sx={{mt: 0.5, mr: 1}} />            \r\n            <ListItemText\r\n              primary={`Channels (${channels ? channels.length : 0})`}/>    \r\n              </div>\r\n              \r\n            <List component=\"div\" disablePadding>           \r\n              {channels ? (\r\n                channels.map((channel) => {\r\n                  return (<div key={channel.id}>                    \r\n                    <ListItemButton \r\n                      sx={{ pl: 4 }}                     \r\n                      onClick={() => {\r\n                        intervalRetrieveMessages(channel.id);\r\n                        setSelectedChannel(channel);\r\n                        retrieveChannelUsers(channel.id)\r\n                        setHasScrolledUp(false)\r\n                      }}\r\n                    >\r\n                      <ListItemText primary={`# ${channel.name}`} />\r\n                    </ListItemButton>\r\n                    \r\n                    </div> );\r\n                })\r\n              ) : (\r\n                <ListItemButton sx={{ pl: 4 }}>\r\n                  <ListItemText primary={`No users Available`} />\r\n                </ListItemButton>\r\n              )}              \r\n            </List>          \r\n        </List>\r\n        <List>         \r\n        </List>        \r\n      </div>\r\n      </div>\r\n\r\n      {/* For Create Channel */}\r\n      <FormDialoguesComponent\r\n        open={openForInviteUser}\r\n        handleClose={handleCloseForInviteUser}\r\n        dialogTitleText={\"Enter New Channel Name You Want to Create\"}\r\n        label={\"Channel Name\"}\r\n        type={`text`}\r\n        createNewChannelWithUser={createNewChannelWithUser}\r\n        isCreateChannel={isCreateChannel}\r\n        setIsCreateChannel={setIsCreateChannel}\r\n        setGetChannel={setGetChannel}\r\n      />\r\n      {/* For Send a DM Modal */}\r\n      <FormDialoguesComponent\r\n        open={openForSendDirectMessage}\r\n        handleClose={handleCloseForSendDirectMessage}\r\n        dialogTitleText={\"Who do you want to send a message to?\"}\r\n        label={\"Email\"}\r\n        type={`text`}\r\n        users={users}\r\n        sortByEmail={sortByEmail}\r\n        searchResults={searchResults}\r\n        intervalRetrieveMessagesWithUser={intervalRetrieveMessagesWithUser}\r\n      />\r\n      <SignOutComponent\r\n      open={open}\r\n      setOpen={setOpen}\r\n      handleClickOpen={handleClickOpen}\r\n      handleClose={handleClose}\r\n      Avatar={Avatar}\r\n      userStatus={userStatus}\r\n      headers={headers}\r\n      signOut={signOut}      \r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeftSidebar;\r\n","import { useState } from \"react\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FormDialoguesComponent from \"./FormDialoguesComponent\";\r\nimport \"./styles.css\"\r\n\r\n\r\nconst TopBarComponent = ({\r\n  drawerWidth,\r\n  headers,\r\n  handleDrawerToggle,\r\n  channels,\r\n  selectedChannel,\r\n  inviteUserToAChannel,\r\n  userID,\r\n  selectedUser,\r\n  currentDateAndTime,\r\n  userInviteError,\r\n  setUserInviteError,\r\n  setGetEmail\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        className=\"appbar\"\r\n        position=\"fixed\"\r\n        sx={{\r\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n          ml: { sm: `${drawerWidth}px` },\r\n        }}\r\n      >\r\n        <Toolbar \r\n          className=\"top-toolbar\" \r\n          style={{\r\n            backgroundColor: \"purple\"}} >\r\n\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"end\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2, display: { sm: \"none\" } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {selectedChannel.name ? (\r\n            <Box onClick={() => handleClickOpen()}>\r\n              <ListItemButton className=\"invite-button\">\r\n                <PersonAddIcon style={{fontSize: '1.5rem', marginRight: '0.5rem'}} />\r\n                <span className=\"invite\">\r\n                  {`Invite`}\r\n                </span>\r\n              </ListItemButton>\r\n            </Box>\r\n          ) : (\r\n            <Box style={{display: \"flex\", flexDirection: 'column'}}>\r\n            <span style={{fontSize: '0.75rem'}}>\r\n              {`${currentDateAndTime.currentDate}`}\r\n              </span>\r\n              <span style={{fontSize: '0.75rem'}}>\r\n              {`${currentDateAndTime.currentTime}`}\r\n              </span>\r\n            </Box>\r\n          )}\r\n\r\n          {(selectedChannel.name || selectedUser.email) && (\r\n            <Box>\r\n              <ListItemButton>\r\n              <span style={{fontSize: '0.9rem'}} className=\"topbar-small\">\r\n                  {selectedChannel.name && <span><span className=\"top-bar-channel\">Channel:</span> <span>{selectedChannel.name}</span></span>}{\" \"}\r\n                  {selectedUser.email && `Chat with ${selectedUser.email}`}\r\n                  </span>\r\n              </ListItemButton>\r\n            </Box>\r\n          )}\r\n\r\n          <Box className=\"top-bar-email\">         \r\n            <span style={{fontSize: '0.75rem', paddingRight: '2px'}}>\r\n              {`${headers.uid}`}\r\n              </span>\r\n              <span style={{fontSize: '0.75rem'}}>\r\n              {`ID: ${userID}`}\r\n              </span>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Form Dialogues */}\r\n      <FormDialoguesComponent\r\n        open={open}\r\n        handleClose={handleClose}\r\n        dialogTitleText={\r\n          selectedChannel &&\r\n          `Enter email to invite to ${selectedChannel.name}`\r\n        }\r\n        channels={channels}\r\n        type={\"text\"}\r\n        label={\"Email\"}\r\n        inviteUserToAChannel={inviteUserToAChannel}\r\n        userInviteError={userInviteError}\r\n        setUserInviteError={setUserInviteError}\r\n        setGetEmail={setGetEmail}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopBarComponent;\r\n","import React from \"react\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\n\r\nexport default function SnackBarComponent({stateSB, setStateSB, messageSB}) {\r\n\r\n    const { vertical, horizontal, openSB } = stateSB;\r\n\r\n  return (        \r\n        <Snackbar     \r\n        open={openSB}\r\n        autoHideDuration={3000}      \r\n        anchorOrigin={{ vertical, horizontal }}        \r\n        onClose={()=>setStateSB({ ...stateSB, openSB: false })}\r\n        message={messageSB}\r\n        key={vertical + horizontal}\r\n      />    \r\n  );\r\n}\r\n","import Toolbar from \"@mui/material/Toolbar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport SnackBarComponent from \"./SnackbarComponent\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport moment from 'moment';\r\nimport {RiSendPlaneFill} from 'react-icons/ri'\r\nimport { useRef, useEffect } from \"react\";\r\n\r\n\r\nconst ChatBodyComponent = ({\r\n  allMessagesRetrieved,\r\n  setMessage,\r\n  message,\r\n  createMessageInAChannel,\r\n  selectedChannel,\r\n  selectedUser,\r\n  createDirectMessageToAUser,\r\n  stateSB,\r\n  setStateSB,\r\n  getChannel,\r\n  getEmail,\r\n  hasScrolledUp,\r\n  setHasScrolledUp,  \r\n}) => {\r\n  const lastMessage = useRef();  \r\n  window.onscroll = () => {\r\n    setHasScrolledUp(true)\r\n  }\r\n  useEffect(() => {     \r\n    if(!hasScrolledUp){ \r\n      if (allMessagesRetrieved?.length >= 1) {\r\n      lastMessage.current.scrollIntoView({ behavior: \"smooth\" });\r\n      }  \r\n    } \r\n  }, [allMessagesRetrieved, hasScrolledUp]);  \r\n  \r\n  return (\r\n    <>    \r\n    { getChannel && <SnackBarComponent\r\n        stateSB={stateSB}\r\n        messageSB={`Successfully Created Channel: ${getChannel}!`}\r\n        setStateSB={setStateSB}\r\n      />} \r\n\r\n    { getEmail && <SnackBarComponent\r\n        stateSB={stateSB}\r\n        messageSB={`Successfully Added User: ${getEmail}!`}\r\n        setStateSB={setStateSB}\r\n      />}\r\n\r\n      <Box component=\"main\"  className=\"chat-body\">      \r\n        <Toolbar />\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",            \r\n            width: '600px',            \r\n          }}\r\n        >\r\n        \r\n          {allMessagesRetrieved?.length >= 1\r\n            ? allMessagesRetrieved.map((val, idx) => {\r\n                return (                  \r\n                  <div key={val.id} ref={idx+1 === allMessagesRetrieved.length ? lastMessage : undefined}>                         \r\n                  <div style={{display: 'flex', alignItems: 'center'}}>\r\n                    <div style={{padding: '12.5px 0', marginRight: \"25px\"}}>\r\n                    <Avatar style={{backgroundColor: \"purple\"}}>{val.sender.email.slice(0, 1).toUpperCase()}</Avatar>           \r\n                    </div>\r\n                    <div style={{padding: '15px 0 12.5px 0'}}>\r\n                    <p style={{margin: '0'}}> {`${val.sender.email.split(\"@\")[0]} says:`}</p>\r\n                    <p style={{margin: '0'}}>{val.body}</p>     \r\n                    <p style={{margin: '0', fontSize: \"12px\"}}>{`${moment(val.created_at).fromNow()}`}</p>               \r\n                    </div>\r\n                  </div>                   \r\n                  </div>\r\n                );\r\n              })\r\n            : (selectedChannel.name && (\r\n                <div className=\"greetings\">\r\n                <div className=\"no-chat-img\"/> \r\n                <span>\r\n                  Channel: {selectedChannel.name} has no messages.\r\n                </span>\r\n                </div>\r\n              )) ||\r\n              (selectedUser.email && (\r\n                <span className=\"greetings\">\r\n                  You have no chat history with {selectedUser.email.split(\"@\")[0]}. Send\r\n                  him/her a message!\r\n                </span>\r\n              )) || (                                      \r\n                <div className=\"greetings\">                 \r\n                <div className=\"home-img\"/>    \r\n                <span >\r\n                  Welcome to Avion Slack App! Hop on a channel or send a DM to\r\n                  get started!👀\r\n                </span>                \r\n                </div>                \r\n              )}\r\n        </Box>        \r\n        {selectedChannel.name && (\r\n          <Box\r\n            className=\"message-area-container\"\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              setHasScrolledUp(false)\r\n              createMessageInAChannel(message);\r\n              setMessage(\"\");    \r\n              \r\n            }}                        \r\n          >\r\n            <TextField\r\n              className=\"message-area\"\r\n              id=\"outlined-basic\"\r\n              label=\"Enter your message here\"\r\n              variant=\"outlined\"\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              value={message}\r\n            />\r\n            <div className=\"send-message-button\"\r\n             onClick={(e) => {\r\n              e.preventDefault();\r\n              setHasScrolledUp(false)\r\n              createMessageInAChannel(message);\r\n              setMessage(\"\");\r\n              \r\n            }}>\r\n            <RiSendPlaneFill size={40}/>\r\n            </div>\r\n          </Box>\r\n        )}\r\n\r\n        {selectedUser.email && (\r\n          <Box\r\n            className=\"message-area-container\"\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              setHasScrolledUp(false)\r\n              createDirectMessageToAUser(message);\r\n              setMessage(\"\");\r\n            }}\r\n          >\r\n            <TextField\r\n              className=\"message-area\"\r\n              id=\"outlined-basic\"\r\n              label=\"Enter your message here\"\r\n              variant=\"outlined\"\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              value={message}\r\n            />\r\n            <div className=\"send-message-button\"\r\n              onClick={(e) => {\r\n              e.preventDefault();\r\n              setHasScrolledUp(false)\r\n              createDirectMessageToAUser(message);\r\n              setMessage(\"\");\r\n            }}>\r\n            <RiSendPlaneFill size={40}/>\r\n            </div>\r\n\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatBodyComponent;\r\n","import React from 'react'\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst RightSideBar = ({users, channelMembers, usersDisplayed, selectedUser}) => {\r\n    return (\r\n      <Drawer\r\n        className=\"right-side-bar\"\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          \"& .MuiDrawer-paper\": {\r\n            width: drawerWidth,\r\n            boxSizing: \"border-box\",\r\n          },\r\n        }}\r\n        variant=\"permanent\"\r\n        anchor=\"right\"\r\n      >\r\n        <Toolbar />\r\n        <Divider />\r\n\r\n        {usersDisplayed.home && (\r\n          <>\r\n            <ListSubheader>ALL USERS</ListSubheader>\r\n            <List style={{overflowX: \"hidden\"}} className=\"channel-list\">\r\n              {users.slice(0, 100).map((val) => {\r\n                return (\r\n                  <ListItem key={val.id}>\r\n                    <Avatar\r\n                      style={{marginRight: \"10px\", backgroundColor: \"purple\"}}\r\n                    >\r\n                      {val.email.slice(0, 1).toUpperCase()}\r\n                    </Avatar>\r\n                    <ListItemText\r\n                      style={{margin: 0, width: \"100%\"}}\r\n                      primary={`${val.uid.split(\"@\")[0]}`}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </>\r\n        )}\r\n\r\n        {usersDisplayed.channel && (\r\n          <>\r\n            <ListSubheader>Channel Members</ListSubheader>\r\n            <List style={{overflowX: \"hidden\"}} className=\"channel-list\">\r\n              {channelMembers.map((val) => {\r\n                return (\r\n                  <ListItem key={val.id}>\r\n                    <Avatar\r\n                      style={{marginRight: \"10px\", backgroundColor: \"purple\"}}\r\n                    >\r\n                      {val.email.slice(0, 1).toUpperCase()}\r\n                    </Avatar>\r\n                    <ListItemText\r\n                      style={{margin: 0, width: \"100%\"}}\r\n                      primary={`${val.email.split(\"@\")[0]}`}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </>\r\n        )}\r\n\r\n        {usersDisplayed.directMessage && (\r\n          <>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              <h5>\r\n                Conversation with <br />\r\n               <span>{selectedUser.email && selectedUser.email.split(\"@\")[0]}</span> \r\n              </h5>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              <div className=\"chat-dm\" />\r\n            </div>\r\n          </>\r\n        )}\r\n        <Divider />\r\n      </Drawer>\r\n    );\r\n}\r\n\r\nexport default RightSideBar\r\n","import Box from \"@mui/material/Box\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport LeftSidebar from \"./LeftSidebar\";\r\nimport TopBarComponent from \"./TopBarComponent\";\r\nimport ChatBodyComponent from \"./ChatBodyComponent\";\r\nimport RightSideBar from \"./RightSideBar\";\r\nimport { useState } from \"react\";\r\n\r\nconst MainChatComponent = ({\r\n  headers,\r\n  users,\r\n  channels,\r\n  handleClickOpenChannel,\r\n  openChannel,\r\n  inviteUserToAChannel,\r\n  createNewChannelWithUser,\r\n  handleClickOpenUsers,\r\n  openUsers,\r\n  handleDrawerToggle,\r\n  mobileOpen,\r\n  allMessagesRetrieved,\r\n  message,\r\n  setMessage,\r\n  isAChannelSelected,\r\n  selectedChannel,\r\n  setSelectedChannel,\r\n  createMessageInAChannel,\r\n  intervalRetrieveMessages,\r\n  userID,\r\n  returnToHome,\r\n  sortByEmail,\r\n  searchResults,\r\n  selectedUser,\r\n  createDirectMessageToAUser,\r\n  intervalRetrieveMessagesWithUser,\r\n  currentDateAndTime,\r\n  isCreateChannel,\r\n  setIsCreateChannel,\r\n  userInviteError,\r\n  setUserInviteError,\r\n  stateSB,\r\n  setStateSB,\r\n  retrieveChannelUsers,\r\n  channelMembers,\r\n  usersDisplayed,\r\n  userStatus,\r\n  signOut,\r\n  setMobileOpen\r\n}) => {\r\n  const drawerWidth = 320;\r\n  //   const {window} = props;\r\n  //   const container =\r\n  //     window !== undefined ? () => window().document.body : undefined;\r\n  const [getChannel, setGetChannel] = useState('')\r\n  const [getEmail, setGetEmail] = useState('')\r\n  const [hasScrolledUp, setHasScrolledUp] = useState(false);\r\n\r\n  return (\r\n    <>\r\n    \r\n      <Box>\r\n        <CssBaseline />\r\n        <TopBarComponent\r\n          drawerWidth={drawerWidth}\r\n          headers={headers}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          isAChannelSelected={isAChannelSelected}\r\n          selectedChannel={selectedChannel}\r\n          inviteUserToAChannel={inviteUserToAChannel}\r\n          userID={userID}\r\n          selectedUser={selectedUser}\r\n          currentDateAndTime={currentDateAndTime}\r\n          userInviteError={userInviteError}\r\n          setUserInviteError={setUserInviteError}\r\n          setGetEmail={setGetEmail}    \r\n        />\r\n        <Box\r\n          component=\"nav\"\r\n          sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n          aria-label=\"mailbox folders\"\r\n        >\r\n          <Drawer            \r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n            sx={{\r\n              display: { xs: \"block\", sm: \"none\" },\r\n              \"& .MuiDrawer-paper\": {\r\n                boxSizing: \"border-box\",\r\n                width: drawerWidth,\r\n              },\r\n            }}\r\n          >\r\n            {\r\n              <LeftSidebar\r\n                handleClickOpenChannel={handleClickOpenChannel}\r\n                openChannel={openChannel}\r\n                createNewChannelWithUser={createNewChannelWithUser}\r\n                handleClickOpenUsers={handleClickOpenUsers}\r\n                users={users}\r\n                openUsers={openUsers}\r\n                setSelectedChannel={setSelectedChannel}\r\n                intervalRetrieveMessages={intervalRetrieveMessages}\r\n                returnToHome={returnToHome}\r\n                sortByEmail={sortByEmail}\r\n                searchResults={searchResults}\r\n                intervalRetrieveMessagesWithUser={intervalRetrieveMessagesWithUser}\r\n                channels={channels}\r\n                isCreateChannel={isCreateChannel}\r\n                setIsCreateChannel={setIsCreateChannel}   \r\n                setGetChannel={setGetChannel} \r\n                retrieveChannelUsers={retrieveChannelUsers}                  \r\n                userStatus={userStatus}\r\n                headers={headers}\r\n                signOut={signOut} \r\n                setMobileOpen={setMobileOpen}                 \r\n                setHasScrolledUp={setHasScrolledUp}\r\n              />\r\n            }\r\n          </Drawer>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            sx={{\r\n              display: { xs: \"none\", sm: \"block\" },\r\n              \"& .MuiDrawer-paper\": {\r\n                boxSizing: \"border-box\",\r\n                width: drawerWidth,\r\n              },\r\n            }}\r\n            open\r\n          >\r\n            {\r\n              <LeftSidebar\r\n                handleClickOpenChannel={handleClickOpenChannel}\r\n                openChannel={openChannel}\r\n                createNewChannelWithUser={createNewChannelWithUser}\r\n                handleClickOpenUsers={handleClickOpenUsers}\r\n                users={users}\r\n                openUsers={openUsers}\r\n                setSelectedChannel={setSelectedChannel}\r\n                intervalRetrieveMessages={intervalRetrieveMessages}\r\n                returnToHome={returnToHome}\r\n                sortByEmail={sortByEmail}\r\n                searchResults={searchResults}\r\n                intervalRetrieveMessagesWithUser={intervalRetrieveMessagesWithUser}\r\n                channels={channels}\r\n                isCreateChannel={isCreateChannel}\r\n                setIsCreateChannel={setIsCreateChannel}\r\n                setGetChannel={setGetChannel}     \r\n                retrieveChannelUsers={retrieveChannelUsers}                  \r\n                userStatus={userStatus}        \r\n                headers={headers}    \r\n                signOut={signOut}         \r\n                setMobileOpen={setMobileOpen}                       \r\n                setHasScrolledUp={setHasScrolledUp}                     \r\n              />\r\n            }\r\n          </Drawer>\r\n          </Box>           \r\n           \r\n          <RightSideBar\r\n            users={users}\r\n            channelMembers={channelMembers}\r\n            usersDisplayed={usersDisplayed}\r\n            selectedUser={selectedUser}\r\n            />       \r\n            \r\n        <ChatBodyComponent\r\n          allMessagesRetrieved={allMessagesRetrieved}\r\n          setMessage={setMessage}\r\n          message={message}\r\n          createMessageInAChannel={createMessageInAChannel}\r\n          selectedChannel={selectedChannel}\r\n          selectedUser={selectedUser}\r\n          createDirectMessageToAUser={createDirectMessageToAUser}\r\n          stateSB={stateSB}\r\n          setStateSB={setStateSB}          \r\n          getChannel={getChannel}\r\n          getEmail={getEmail}\r\n          hasScrolledUp={hasScrolledUp}\r\n          setHasScrolledUp={setHasScrolledUp}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainChatComponent;\r\n","import React from \"react\";\r\nimport Loaders from \"./Loaders\";\r\nimport useHooks from \"./hooks\";\r\nimport MainChatComponent from \"./MainChatComponent\";\r\nimport \"./styles.css\";\r\n\r\nconst Index = () => {\r\n  const {\r\n    headers,\r\n    users,\r\n    channels,\r\n    handleClickOpenChannel,\r\n    openChannel,\r\n    inviteUserToAChannel,\r\n    createNewChannelWithUser,\r\n    handleClickOpenUsers,\r\n    openUsers,\r\n    handleDrawerToggle,\r\n    mobileOpen,\r\n    allMessagesRetrieved,\r\n    message,\r\n    setMessage,\r\n    isAChannelSelected,\r\n    selectedChannel,\r\n    setSelectedChannel,\r\n    createMessageInAChannel,\r\n    intervalRetrieveMessages,\r\n    userID,\r\n    returnToHome,\r\n    sortByEmail,\r\n    searchResults,\r\n    selectedUser,\r\n    createDirectMessageToAUser,\r\n    intervalRetrieveMessagesWithUser,\r\n    loading,\r\n    currentDateAndTime,\r\n    isCreateChannel,\r\n    setIsCreateChannel,\r\n    userInviteError,\r\n    setUserInviteError,\r\n    stateSB,\r\n    setStateSB,\r\n    retrieveChannelUsers,\r\n    channelMembers,\r\n    usersDisplayed,\r\n    userStatus,\r\n    signOut,\r\n    setMobileOpen\r\n  } = useHooks();\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loaders loading={loading} />\r\n      ) : (\r\n        <MainChatComponent\r\n          headers={headers}\r\n          users={users}\r\n          channels={channels}\r\n          handleClickOpenChannel={handleClickOpenChannel}\r\n          openChannel={openChannel}\r\n          inviteUserToAChannel={inviteUserToAChannel}\r\n          createNewChannelWithUser={createNewChannelWithUser}\r\n          handleClickOpenUsers={handleClickOpenUsers}\r\n          openUsers={openUsers}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          mobileOpen={mobileOpen}\r\n          allMessagesRetrieved={allMessagesRetrieved}\r\n          message={message}\r\n          setMessage={setMessage}\r\n          isAChannelSelected={isAChannelSelected}\r\n          selectedChannel={selectedChannel}\r\n          setSelectedChannel={setSelectedChannel}\r\n          createMessageInAChannel={createMessageInAChannel}\r\n          intervalRetrieveMessages={intervalRetrieveMessages}\r\n          userID={userID}\r\n          returnToHome={returnToHome}\r\n          sortByEmail={sortByEmail}\r\n          searchResults={searchResults}\r\n          selectedUser={selectedUser}\r\n          createDirectMessageToAUser={createDirectMessageToAUser}\r\n          intervalRetrieveMessagesWithUser={intervalRetrieveMessagesWithUser}\r\n          currentDateAndTime={currentDateAndTime}\r\n          isCreateChannel={isCreateChannel}\r\n          setIsCreateChannel={setIsCreateChannel}\r\n          userInviteError={userInviteError}\r\n          setUserInviteError={setUserInviteError}\r\n          stateSB={stateSB}\r\n          setStateSB={setStateSB}\r\n          retrieveChannelUsers={retrieveChannelUsers}\r\n          channelMembers={channelMembers}\r\n          usersDisplayed={usersDisplayed}\r\n          userStatus={userStatus}\r\n          signOut={signOut}\r\n          setMobileOpen={setMobileOpen}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect  \r\n} from \"react-router-dom\";\r\nimport Home from '../Home'\r\nimport Chat from '../Chat'\r\nimport useLocalStorage from \"../Home/useLocalStorage\";\r\n\r\nconst Routes = () => {\r\n  const [userStatus] = useLocalStorage('status')\r\n\r\n    return (\r\n      <>\r\n      <Router>              \r\n           <Switch>           \r\n            <Route exact path=\"/\" component={()=> userStatus?.isLoggedIn ? <Redirect to='/chat'/> : <Home/>}/>                         \r\n            <Route exact path=\"/chat\" component={Chat}>\r\n              <Chat />\r\n            </Route>          \r\n          </Switch>       \r\n      </Router>\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default Routes","import './App.css';\nimport Routes from './components/Routes'\n\n\nconst App = () => { \n\n  \n  return (\n    \n<Routes/>\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}