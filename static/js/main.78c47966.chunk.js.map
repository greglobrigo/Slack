{"version":3,"sources":["components/Home/useSessionStorage.js","components/Chat/hooks.js","components/Home/hooks.js","components/Home/index.js","components/Chat/Loaders.js","components/Chat/FormDialoguesComponent.js","components/Chat/SidebarComponent.js","components/Chat/TopBarComponent.js","components/Chat/SnackbarComponent.js","components/Chat/ChatBodyComponent.js","components/Chat/RightSideBar.js","components/Chat/MainChatComponent.js","components/Chat/index.js","components/Routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["useSessionStorage","req1","req2","key","initialValue","useState","item","window","sessionStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Hooks","loading","setLoading","useEffect","setTimeout","setHeaders","setUserID","password","setPassword","secondPassword","setSecondPassword","email","setEmail","isRegistering","setIsRegistering","route","setRoute","passwordsDoNotMatch","invalidEmailFormat","emailIsEmpty","passwordIsEmpty","passwordTooShort","validInfo","setValidInfo","successful","failed","isRegister","setIsRegister","isLogin","setIsLogin","registerUser","axios","url","data","headers","method","then","resetUserInput","catch","transition","logIn","e","preventDefault","includes","res","id","register","length","theme","createTheme","SignIn","useHooks","to","className","color","size","up","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","Typography","variant","onClick","noValidate","mt","TextField","onChange","target","margin","fullWidth","label","type","autoFocus","Button","mb","backgroundColor","Grid","container","Link","style","cursor","align","Date","getFullYear","Loaders","userID","users","setUsers","channels","setChannels","message","setMessage","allMessagesRetrieved","setAllMessagesRetrieved","mobileOpen","setMobileOpen","searchResults","setSearchResults","selectedUser","setSelectedUser","channelMembers","setChannelMembers","home","channel","usersDisplayed","setUsersDisplayed","withoutCurrentUser","filter","user","uid","success","isCreateChannel","setIsCreateChannel","userInviteError","setUserInviteError","openChannel","setOpenChannel","openUsers","setOpenUsers","selectedChannel","setSelectedChannel","openSB","vertical","horizontal","stateSB","setStateSB","client","expiry","getCurrentTime","retrieveAllMessagesInAChannel","retrieveAllMessagesWithUser","userData","currentTime","currentDate","currentDateAndTime","setCurrentDateAndTime","d","weekday","Array","setInterval","time","toLocaleTimeString","hour","minute","currentDay","getDay","handleClickOpenChannel","inviteUserToAChannel","userEmail","handleClose","setValueFromForm","extractedId","member_id","errors","createNewChannelWithUser","channelName","name","user_ids","join","handleClickOpenUsers","handleDrawerToggle","createMessageInAChannel","receiver_id","receiver_class","body","intervalRetrieveMessages","clearTimeout","returnToHome","sortByEmail","val","sortedUsers","createDirectMessageToAUser","intervalRetrieveMessagesWithUser","retrieveChannelUsers","channel_members","map","user_id","filteredChannelMembers","FormDialoguesComponent","open","dialogTitleText","setGetChannel","setGetEmail","valueFromForm","Dialog","onClose","DialogTitle","pb","DialogContent","List","ListItemButton","pl","ListItemText","primary","DialogActions","SidebarComponent","openForInviteUser","setOpenForInviteUser","openForSendDirectMessage","setOpenForSendDirectMessage","Toolbar","fontSize","mr","disablePadding","TopBarComponent","drawerWidth","setOpen","AppBar","position","width","sm","ml","justifyContent","paddingRight","IconButton","edge","marginRight","textAlign","SnackBarComponent","messageSB","Snackbar","autoHideDuration","anchorOrigin","ChatBodyComponent","getChannel","getEmail","flexGrow","p","padding","sender","slice","toUpperCase","split","created_at","autoComplete","onSubmit","RightSideBar","Drawer","flexShrink","boxSizing","anchor","opacity","Divider","ListSubheader","overflowX","ListItem","MainChatComponent","isAChannelSelected","ModalProps","keepMounted","xs","Index","Routes","exact","path","comp","Home","Chat","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78c47966.chunk.js","sourcesContent":["import {useState} from 'react';\r\n\r\n// Hook\r\nfunction useSessionStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from session storage by key\r\n        const item = window.sessionStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to sessionStorage.\r\n    const setValue = (value) => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to session storage\r\n        window.sessionStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  export default useSessionStorage;","import useSessionStorage from \"../Home/useSessionStorage.js\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TrendingUpRounded } from \"@mui/icons-material\";\r\n\r\nvar req1;\r\nvar req2;\r\n\r\nconst Hooks = () => {\r\n  const [headers] = useSessionStorage(\"headers\", []);\r\n  const [userID] = useSessionStorage(\"userID\", []);\r\n  const [users, setUsers] = useState([]);\r\n  const [channels, setChannels] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [allMessagesRetrieved, setAllMessagesRetrieved] = useState([]);\r\n  const [mobileOpen, setMobileOpen] = useState(false);  \r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState([]);\r\n  const [channelMembers, setChannelMembers] = useState([])\r\n  const [usersDisplayed, setUsersDisplayed] = useState({home: true, channel: false})\r\n  \r\n  const withoutCurrentUser = users.filter(\r\n    (user) => !user.email.includes(headers.uid)\r\n  );\r\n  const [isCreateChannel, setIsCreateChannel] = useState({\r\n    success: false,\r\n    failed: false,\r\n  });\r\n\r\n  const [userInviteError, setUserInviteError] = useState(\"\");\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const [openChannel, setOpenChannel] = useState(false);\r\n  const [openUsers, setOpenUsers] = useState(false);\r\n\r\n  const handleClickOpenChannel = () => {\r\n    setOpenChannel(!openChannel);\r\n  };\r\n\r\n  const handleClickOpenUsers = () => {\r\n    setOpenUsers(!openUsers);\r\n  };\r\n\r\n  const [selectedChannel, setSelectedChannel] = useState([]);\r\n\r\n  const [stateSB, setStateSB] = useState({\r\n    openSB: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\"\r\n  });\r\n\r\n\r\n// stores all the email in a channel\r\n  // useEffect(() => {\r\n  //   collectChannelEmailsArray(channelUsersId)\r\n  // }, [channelUsersId]);\r\n\r\n  // useEffect(() => {\r\n  //   collectChannelEmails(channelEmailsArray);\r\n  //   console.log(channelEmailsArray)\r\n  // }, [channelEmailsArray]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(channelEmails)\r\n  // }, [channelEmails]);\r\n  \r\n\r\n  useEffect(() => {\r\n    \r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getAllUsers = () => {\r\n      axios({\r\n        url: \"http://206.189.91.54/api/v1/users\",\r\n        data: {},\r\n        method: \"GET\",\r\n        headers: {\r\n          \"access-token\": headers[\"access-token\"],\r\n          client: headers.client,\r\n          expiry: headers.expiry,\r\n          uid: headers.uid,\r\n        },\r\n      })\r\n        .then((res) => {setUsers(res.data.data); \r\n          console.log(res.data.data)})\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    getAllUsers();\r\n\r\n    const retrieveChannels = () => {\r\n      axios({\r\n        url: \"http://206.189.91.54/api/v1/channels\",\r\n        data: {},\r\n        method: \"GET\",\r\n        headers: {\r\n          \"access-token\": headers[\"access-token\"],\r\n          client: headers.client,\r\n          expiry: headers.expiry,\r\n          uid: headers.uid,\r\n        },\r\n      })\r\n        .then((res) => setChannels(res.data.data))\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    retrieveChannels();\r\n    getCurrentTime();\r\n  }, [headers]);\r\n\r\n  const retrieveChannels = () => {\r\n    axios({\r\n      url: \"http://206.189.91.54/api/v1/channels\",\r\n      data: {},\r\n      method: \"GET\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        client: headers.client,\r\n        expiry: headers.expiry,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then((res) => setChannels(res.data.data))\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const intervalRetrieveMessages = (id) => {\r\n    clearTimeout(req1);\r\n    clearTimeout(req2);    \r\n    setSelectedUser([]);\r\n    retrieveAllMessagesInAChannel(id);  \r\n      req1 = setInterval(() => {\r\n        retrieveAllMessagesInAChannel(id);\r\n      }, 1500);  \r\n  };\r\n\r\n  const retrieveAllMessagesInAChannel = (id) => {\r\n    axios({\r\n      url: `http://206.189.91.54/api/v1/messages?receiver_id=${id}&receiver_class=Channel`,\r\n      data: {},\r\n      method: \"GET\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then((res) => {setAllMessagesRetrieved(res.data.data); })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n    //INVITE USER TO A CHANNEL\r\n  const inviteUserToAChannel = (userEmail, handleClose, setValueFromForm) => {\r\n    const extractedId = users.filter(user=>user.email===userEmail) \r\n\r\n    axios({\r\n      url: \"http://206.189.91.54/api/v1/channel/add_member\",\r\n      data: {\r\n        id: `${selectedChannel.id}`,\r\n        member_id: `${extractedId[0]?.id}`,\r\n      },\r\n      method: \"POST\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        uid: headers.uid,\r\n        client: headers.client,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.errors) {\r\n          setUserInviteError(res.data.errors);            \r\n        } else {\r\n          setStateSB({ ...stateSB, openSB: true });          \r\n          setValueFromForm('')\r\n          setUserInviteError(\"\");\r\n          handleClose();\r\n        }\r\n        console.log(res);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n\r\n  //CREATE NEW CHANNEL\r\n   const createNewChannelWithUser = (channelName, handleClose, setValueFromForm) => {\r\n    axios({\r\n      url: \"http://206.189.91.54/api/v1/channels\",\r\n      data: {\r\n        name: `${channelName}`,\r\n        user_ids: [userID],\r\n      },\r\n      method: \"POST\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        retrieveChannels();\r\n        if (res.data.data?.id) {\r\n          setStateSB({ ...stateSB, openSB: true });                \r\n          handleClose();\r\n          setValueFromForm(\"\");\r\n          \r\n        } else {\r\n          const errors = res.data.errors;\r\n          setIsCreateChannel({ failed: [...errors].join(\". \") })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const createMessageInAChannel = (message) => {\r\n    axios({\r\n      url: `http://206.189.91.54/api/v1/messages`,\r\n      data: {\r\n        receiver_id: `${selectedChannel.id}`,\r\n        receiver_class: \"Channel\",\r\n        body: `${message}`,\r\n      },\r\n      method: \"POST\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then(retrieveAllMessagesInAChannel(selectedChannel.id))\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const retrieveAllMessagesWithUser = (userData) => {\r\n    axios({\r\n      url: `http://206.189.91.54/api/v1/messages?receiver_id=${userData.id}&receiver_class=User`,\r\n      method: \"GET\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setAllMessagesRetrieved(res.data.data)\r\n        // console.log(res);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const intervalRetrieveMessagesWithUser = (userData) => {\r\n    clearTimeout(req1);\r\n    clearTimeout(req2);\r\n    setSelectedChannel([]);\r\n    setSelectedUser(userData);\r\n    retrieveAllMessagesWithUser(userData);\r\n    setSearchResults([]);\r\n         req2 = setInterval(() => {\r\n        retrieveAllMessagesWithUser(userData);\r\n      }, 1500);  \r\n  };\r\n\r\n  const createDirectMessageToAUser = (message) => {\r\n    axios({\r\n      url: `http://206.189.91.54/api/v1/messages`,\r\n      data: {\r\n        receiver_id: `${selectedUser.id}`,\r\n        receiver_class: \"User\",\r\n        body: `${message}`,\r\n      },\r\n      method: \"POST\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  const retrieveChannelUsers = (id) => {\r\n\r\n    axios({\r\n      url: `http://206.189.91.54/api/v1/channels/${id}`,\r\n      method: \"GET\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then((res) => {        \r\n        const channelMembers = res.data.data.channel_members.map(val=>val.user_id)        \r\n        const filteredChannelMembers = users.filter(user=>channelMembers.includes(user.id))        \r\n        setChannelMembers(filteredChannelMembers)\r\n        setUsersDisplayed({home: false, channel: true})      \r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n  const returnToHome = () => {\r\n\r\n    setUsersDisplayed({home: true, channel: false})\r\n    clearTimeout(req1);\r\n    clearTimeout(req2);\r\n    setAllMessagesRetrieved([]);\r\n    setSelectedChannel([]);\r\n    setSelectedUser([]);\r\n  };\r\n\r\n  const sortByEmail = (val) => {\r\n    // setTimeout(() => {\r\n      const sortedUsers = withoutCurrentUser.filter((value) =>\r\n        value.email.includes(val)\r\n      );\r\n      setSearchResults(sortedUsers);\r\n    // }, 500);\r\n  };\r\n\r\n  const [currentDateAndTime, setCurrentDateAndTime] = useState({\r\n    currentTime: \"\",\r\n    currentDate: \"\",\r\n  });\r\n\r\n  const getCurrentTime = () => {\r\n    var d = new Date();\r\n    var weekday = new Array(7);\r\n    weekday[0] = \"Sunday\";\r\n    weekday[1] = \"Monday\";\r\n    weekday[2] = \"Tuesday\";\r\n    weekday[3] = \"Wednesday\";\r\n    weekday[4] = \"Thursday\";\r\n    weekday[5] = \"Friday\";\r\n    weekday[6] = \"Saturday\";\r\n    setInterval(() => {\r\n      const time = new Date().toLocaleTimeString([], {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      });\r\n      var currentDay = weekday[d.getDay()];\r\n      setCurrentDateAndTime({ currentTime: time, currentDate: currentDay });\r\n    }, 1000);\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    headers,\r\n    users,\r\n    channels,\r\n    handleClickOpenChannel,\r\n    openChannel,\r\n    inviteUserToAChannel,\r\n    createNewChannelWithUser,\r\n    handleClickOpenUsers,\r\n    openUsers,\r\n    handleDrawerToggle,\r\n    mobileOpen,\r\n    allMessagesRetrieved,\r\n    message,\r\n    setMessage,\r\n    selectedChannel,\r\n    setSelectedChannel,\r\n    createMessageInAChannel,\r\n    intervalRetrieveMessages,\r\n    userID,\r\n    returnToHome,\r\n    sortByEmail,\r\n    searchResults,\r\n    selectedUser,\r\n    createDirectMessageToAUser,\r\n    intervalRetrieveMessagesWithUser,\r\n    currentDateAndTime,\r\n    isCreateChannel,\r\n    setIsCreateChannel,\r\n    userInviteError,\r\n    setUserInviteError,\r\n    stateSB,\r\n    setStateSB,\r\n    retrieveChannelUsers,\r\n    channelMembers,\r\n    usersDisplayed\r\n  };\r\n};\r\n\r\nexport default Hooks;\r\n","import {useState, useEffect} from 'react'\r\nimport useSessionStorage from './useSessionStorage'\r\nimport axios from 'axios';\r\n\r\nconst Hooks = () => {\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    setTimeout(() => {\r\n    setLoading(false)\r\n    }, 3000);\r\n  }, [])\r\n\r\n    const [headers, setHeaders] = useSessionStorage('headers', [])\r\n    const [userID, setUserID] = useSessionStorage('userID', []);\r\n    const [password, setPassword] = useState('')\r\n    const [secondPassword, setSecondPassword] = useState('')    \r\n    const [email, setEmail] = useState('')    \r\n    const [isRegistering, setIsRegistering] = useState(false)\r\n    const [route, setRoute] = useState(false)   \r\n    const [validInfo, setValidInfo] = useState({\r\n            passwordsDoNotMatch: false,\r\n            invalidEmailFormat: false,\r\n            emailIsEmpty: false,\r\n            passwordIsEmpty: false,\r\n            passwordTooShort: false,\r\n        })\r\n    const [isRegister, setIsRegister] = useState({\r\n           successful: false,\r\n           failed: false,           \r\n        })\r\n    const [isLogin, setIsLogin] = useState({\r\n           successful: false,\r\n           failed: false\r\n        })\r\n    \r\n        \r\n    const registerUser = () => {      \r\n\r\n         axios({      \r\n            url: 'http://206.189.91.54/api/v1/auth',\r\n            data: {'email': email,\r\n                  'password': password,\r\n                  'password_confirmation': secondPassword},\r\n            headers: {},\r\n            method: 'POST',\r\n            }).then(() => {                \r\n                setIsRegister({successful:true})                \r\n                resetUserInput()\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n                setIsRegister({failed: true})\r\n            })\r\n        \r\n    }\r\n\r\n    const register = (e) => {\r\n        e.preventDefault()\r\n        if(!email.includes(\"@\" && \".\")) {            \r\n        setValidInfo({invalidEmailFormat: true})}   \r\n            else if (!password || !secondPassword){\r\n            setValidInfo({passwordIsEmpty: true})}     \r\n                 else if (password !== secondPassword) {\r\n                setValidInfo({passwordsDoNotMatch: true})\r\n                    } else if (password.length < 6) {\r\n                      setValidInfo({passwordTooShort: true})\r\n                    }\r\n         else {         \r\n           registerUser()\r\n         }\r\n\r\n    }\r\n\r\n    const  loginUser = () =>{\r\n\r\n       axios({      \r\n        url: 'http://206.189.91.54/api/v1/auth/sign_in',\r\n        data: {'email': email,\r\n              'password': password},\r\n        headers: {},\r\n        method: 'POST',\r\n        }).then((res) => {          \r\n          setUserID(res.data.data.id)\r\n          setHeaders(res.headers)\r\n          transition()\r\n          resetUserInput()          \r\n        })   \r\n        .catch((error) => {\r\n            console.log(error)\r\n            setIsLogin({failed: true})\r\n        })         \r\n    }    \r\n \r\n   const logIn = (e) =>{   \r\n     e.preventDefault()  \r\n        if(!email) {\r\n        setValidInfo({emailIsEmpty: true})\r\n        } else if (!password){\r\n            setValidInfo({passwordIsEmpty: true}) \r\n            } else if(!email.includes(\"@\" && \".\")) {            \r\n             setValidInfo({invalidEmailFormat: true})                \r\n                } else { \r\n             loginUser()\r\n    }\r\n   } \r\n\r\n\r\n   const resetUserInput = () => {\r\n     setEmail('')\r\n     setPassword('')\r\n     setSecondPassword('')\r\n   }\r\n\r\n   const transition = () => {\r\n    setLoading(true)\r\n    setTimeout(() => {setLoading(false); setRoute(true)}, 2000)\r\n   }\r\n\r\n    return {               \r\n        password,\r\n        setPassword,\r\n        email,\r\n        setEmail,                \r\n        logIn,                \r\n        setIsLogin,\r\n        isLogin,\r\n        isRegistering,\r\n        setIsRegistering,\r\n        secondPassword,\r\n        setSecondPassword,\r\n        register,\r\n        registerUser,\r\n        isRegister,\r\n        setIsRegister,\r\n        validInfo,\r\n        setValidInfo,\r\n        setLoading,\r\n        loading,\r\n        transition,\r\n        route,\r\n        setRoute,          \r\n    }   \r\n}\r\n\r\nexport default Hooks\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport useHooks from \"./hooks\";\r\nimport \"./styles.css\";\r\nimport { HashLoader } from \"react-spinners\";\r\nimport { Fade } from \"react-reveal\";\r\nimport { CgSlack } from \"react-icons/cg\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst theme = createTheme();\r\n\r\nexport const SignIn = () => {\r\n  const {\r\n    password,\r\n    setPassword,\r\n    secondPassword,\r\n    setSecondPassword,\r\n    email,\r\n    setEmail,\r\n    logIn,\r\n    isLogin,\r\n    setIsLogin,\r\n    isRegistering,\r\n    setIsRegistering,\r\n    register,\r\n    isRegister,\r\n    setIsRegister,\r\n    setValidInfo,\r\n    validInfo,\r\n    loading,\r\n    route,    \r\n} = useHooks() \r\n  \r\n  return (\r\n    <>\r\n      \r\n      {route && <Redirect to=\"/chat\" />}\r\n      {loading ? (\r\n        <>\r\n        \r\n          <div className=\"loader\">\r\n            <HashLoader loading={loading} color={\"purple\"} size={80} />\r\n            <h3>Loading...</h3>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n        <div className=\"background\"></div>\r\n          <Fade up>\r\n            <div className=\"heading-container\">\r\n              <span className=\"heading\">\r\n                <CgSlack />\r\n                Avion Slack App\r\n              </span>\r\n              <span className=\"website\">avionschool.slack.com</span>\r\n            </div>\r\n            <ThemeProvider theme={theme}>\r\n              <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <Box\r\n                  sx={{\r\n                    marginTop: 5,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Avatar sx={{ m: 1, bgcolor: \"purple\" }}></Avatar>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                    {isRegistering ? \"Register \" : \"Sign in\"}\r\n                  </Typography>\r\n                  <Box\r\n                    component=\"form\"\r\n                    onClick={() => {\r\n                      setIsLogin(false);\r\n                      setIsRegister(false);\r\n                      setValidInfo(false);\r\n                    }}\r\n                    noValidate\r\n                    sx={{ mt: 1 }}\r\n                  >\r\n                    <TextField\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      value={email}\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      label=\"Email Address\"\r\n                      type=\"text\"\r\n                      autoFocus\r\n                    />\r\n\r\n                    <TextField\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      value={password}\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                    />\r\n\r\n                    {isRegistering && (\r\n                      <Fade up>\r\n                        {\" \"}\r\n                        <TextField\r\n                          onChange={(e) => setSecondPassword(e.target.value)}\r\n                          value={secondPassword}\r\n                          margin=\"normal\"\r\n                          fullWidth\r\n                          label=\"Re-type Password\"\r\n                          type=\"password\"\r\n                        />{\" \"}\r\n                      </Fade>\r\n                    )}\r\n                    {isLogin.failed && (\r\n                      <span className=\"failed\">Invalid email or password</span>\r\n                    )}\r\n                    {isRegister.successful && (\r\n                      <span className=\"success\">Registration Success!</span>\r\n                    )}\r\n                    {isRegister.failed && (\r\n                      <span className=\"failed\">Email already taken</span>\r\n                    )}\r\n                    {validInfo.invalidEmailFormat && (\r\n                      <span className=\"failed\">Invalid email format</span>\r\n                    )}\r\n                    {validInfo.emailIsEmpty && (\r\n                      <span className=\"failed\">Email is required</span>\r\n                    )}\r\n                    {validInfo.passwordIsEmpty && (\r\n                      <span className=\"failed\">Password is required</span>\r\n                    )}\r\n                    {validInfo.passwordsDoNotMatch && (\r\n                      <span className=\"failed\">Passwords do not match</span>\r\n                    )}\r\n                  </Box>\r\n\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      isRegistering ? register(e) : logIn(e);\r\n                    }}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2, backgroundColor: \"purple\" }}\r\n                  >\r\n                    {isRegistering ? \"Sign up\" : \"Sign In\"}\r\n                  </Button>\r\n                  <Grid container>\r\n                    <Grid item>\r\n                      <Link\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => setIsRegistering(!isRegistering)}\r\n                        variant=\"body2\"\r\n                      >\r\n                        {isRegistering\r\n                          ? \"Already have an account? Sign in\"\r\n                          : \"Don't have an account? Sign Up\"}\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grid>               \r\n                </Box>\r\n                <Typography\r\n                  className=\"copyright\"\r\n                  variant=\"body2\"\r\n                  color=\"text.secondary\"\r\n                  align=\"center\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                  {\"Copyright © \"}\r\n                  <span color=\"inherit\">Avion School Slack App</span>{\" \"}\r\n                  {new Date().getFullYear()}\r\n                  {\".\"}\r\n                </Typography>\r\n              </Container>\r\n            </ThemeProvider>\r\n          </Fade>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","\r\nimport { HashLoader } from \"react-spinners\";\r\n\r\nconst Loaders = ({loading}) => {\r\n    return (\r\n        <>             \r\n        <div className=\"loader\">\r\n          <HashLoader loading={loading} color={\"purple\"} size={80}/> \r\n          <h3>Almost there...</h3>\r\n          </div> \r\n          </>\r\n    )\r\n}\r\n\r\nexport default Loaders\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\n\r\nconst FormDialoguesComponent = ({\r\n  open,\r\n  handleClose,\r\n  dialogTitleText,\r\n  inviteUserToAChannel,\r\n  label,\r\n  type,\r\n  createNewChannelWithUser,\r\n  intervalRetrieveMessagesWithUser,\r\n  sortByEmail,\r\n  searchResults,\r\n  isCreateChannel,\r\n  setIsCreateChannel,\r\n  userInviteError,\r\n  setUserInviteError,\r\n  setGetChannel,\r\n  setGetEmail\r\n  \r\n}) => {\r\n  const [valueFromForm, setValueFromForm] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle sx={{ pb: 1 }}>{dialogTitleText}</DialogTitle>\r\n        <DialogContent>\r\n          {sortByEmail && (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label={label}\r\n              type={type}\r\n              fullWidth\r\n              variant=\"standard\"\r\n              onChange={(e) => {\r\n                setValueFromForm(e.target.value);\r\n                sortByEmail(valueFromForm);\r\n              }}\r\n              value={valueFromForm}\r\n            />\r\n          )}\r\n\r\n          {searchResults && (\r\n            <List className=\"list-results\">\r\n              {searchResults.map((val) => {\r\n                return (\r\n                  <ListItemButton\r\n                    sx={{ pl: 4 }}\r\n                    key={val.id}\r\n                    onClick={() => {\r\n                      intervalRetrieveMessagesWithUser(val);\r\n                      handleClose();\r\n                      setValueFromForm(\"\");\r\n                    }}\r\n                  >\r\n                    <ListItemText primary={`${val.uid}`} />\r\n                  </ListItemButton>\r\n                );\r\n              })}\r\n            </List>\r\n          )}\r\n\r\n          {inviteUserToAChannel && (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label={label}\r\n              type={type}\r\n              fullWidth\r\n              variant=\"standard\"\r\n              onChange={(e) => {\r\n                setValueFromForm(e.target.value);\r\n              }}\r\n              value={valueFromForm}\r\n            />\r\n          )}\r\n\r\n          {userInviteError && (\r\n            <span style={{ color: \"red\" }}>{userInviteError}</span>\r\n          )}\r\n\r\n          {createNewChannelWithUser && (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label={label}\r\n              type={type}\r\n              fullWidth\r\n              variant=\"standard\"\r\n              onChange={(e) => {\r\n                setValueFromForm(e.target.value);\r\n              }}\r\n              value={valueFromForm}\r\n            />\r\n          )}\r\n          {isCreateChannel?.failed && (\r\n            <span style={{ color: \"red\" }}>{[...isCreateChannel.failed]}</span>\r\n          )}\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleClose();\r\n              setValueFromForm(\"\");\r\n              isCreateChannel && setIsCreateChannel(false);\r\n              userInviteError && setUserInviteError(\"\");\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          {inviteUserToAChannel && (\r\n            <Button\r\n              onClick={() => {\r\n                setGetEmail(valueFromForm)\r\n                inviteUserToAChannel(valueFromForm, handleClose, setValueFromForm)\r\n                setTimeout(() => {\r\n                setGetEmail('')\r\n              }, 4000);  \r\n              }}\r\n            >\r\n              Invite\r\n            </Button>\r\n          )}\r\n          {createNewChannelWithUser && (\r\n            <Button\r\n              sx={{ alignItems: \"center\" }}\r\n              onClick={() => {\r\n                setGetChannel(valueFromForm)\r\n                createNewChannelWithUser(valueFromForm, handleClose, setValueFromForm)\r\n                setTimeout(() => {\r\n                setGetChannel('')\r\n              }, 4000);                \r\n              }}\r\n            >\r\n              Create\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default FormDialoguesComponent;\r\n","import React, { useState } from \"react\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ChatBubbleIcon from \"@mui/icons-material/ChatBubble\";\r\nimport ForumIcon from \"@mui/icons-material/Forum\";\r\nimport GroupAddIcon from \"@mui/icons-material/GroupAdd\";\r\nimport FormDialoguesComponent from \"./FormDialoguesComponent\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport GroupIcon from \"@mui/icons-material/Group\";\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\nconst SidebarComponent = ({\r\n  handleClickOpenChannel,\r\n  openChannel,\r\n  channels,\r\n  createNewChannelWithUser,\r\n  handleClickOpenUsers,\r\n  users,\r\n  openUsers,\r\n  setSelectedChannel,\r\n  intervalRetrieveMessages,\r\n  returnToHome,\r\n  sortByEmail,\r\n  searchResults,\r\n  intervalRetrieveMessagesWithUser,\r\n  isCreateChannel,\r\n  setIsCreateChannel,  \r\n  setGetChannel,\r\n  retrieveChannelUsers   \r\n\r\n}) => {\r\n  const [openForInviteUser, setOpenForInviteUser] = useState(false);\r\n  const handleClickOpenForInviteUser = () => {\r\n    setOpenForInviteUser(true);\r\n  };\r\n  const handleCloseForInviteUser = () => {\r\n    setOpenForInviteUser(false);\r\n  };\r\n\r\n  const [openForSendDirectMessage, setOpenForSendDirectMessage] =\r\n    useState(false);\r\n  const handleClickOpenSendDirectMessage = () => {\r\n    setOpenForSendDirectMessage(true);\r\n  };\r\n  const handleCloseForSendDirectMessage = () => {\r\n    setOpenForSendDirectMessage(false);\r\n  };\r\n\r\n  return (\r\n    <>   \r\n     <Toolbar \r\n          sx={{bgcolor: \"purple\"}}\r\n        />  \r\n      <div className=\"sidebar-container channel-list\">\r\n\r\n\r\n      <div className=\"side-navigation\" style={{backgroundColor:\"#b491c8\"}}> \r\n\r\n      <List>\r\n\r\n          <ListItemButton className=\"side-navigation-item\" onClick={() => {returnToHome()}}>            \r\n          <HomeIcon />              \r\n          <span style={{fontSize:\"0.75rem\"}}>  \r\n          Home\r\n          </span>                \r\n          </ListItemButton>\r\n\r\n          <ListItemButton className=\"side-navigation-item\" onClick={() => handleClickOpenForInviteUser()}>\r\n            <GroupAddIcon />                      \r\n            <span style={{fontSize:\"0.75rem\"}}>  \r\n            Add\r\n          </span> \r\n          <span style={{fontSize:\"0.75rem\"}}>  \r\n            Channel\r\n          </span> \r\n          </ListItemButton>\r\n          \r\n          <ListItemButton className=\"side-navigation-item\" onClick={() => handleClickOpenSendDirectMessage()}>            \r\n              <ForumIcon />    \r\n          <span style={{fontSize:\"0.75rem\"}}>  \r\n          Direct\r\n          </span> \r\n          <span style={{fontSize:\"0.75rem\"}}>  \r\n             Message\r\n          </span>        \r\n          </ListItemButton>\r\n\r\n     </List>\r\n\r\n       \r\n      \r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n      <div className=\"main-sidebar\">    \r\n        <List>   \r\n            <div style={{display: 'flex'}}>                   \r\n              <GroupIcon sx={{mt: 0.5, mr: 1}} />            \r\n            <ListItemText\r\n              primary={`Channels (${channels ? channels.length : 0})`}/>    \r\n              </div>\r\n              \r\n            <List component=\"div\" disablePadding>           \r\n              {channels ? (\r\n                channels.map((channel) => {\r\n                  return (<div key={channel.id}>\r\n                    \r\n                    <ListItemButton \r\n                      sx={{ pl: 4 }}\r\n                     \r\n                      onClick={() => {\r\n                        intervalRetrieveMessages(channel.id);\r\n                        setSelectedChannel(channel);\r\n                        retrieveChannelUsers(channel.id)\r\n                      }}\r\n                    >\r\n                      <ListItemText primary={`# ${channel.name}`} />\r\n                    </ListItemButton>\r\n                    \r\n                    </div> );\r\n                })\r\n              ) : (\r\n                <ListItemButton sx={{ pl: 4 }}>\r\n                  <ListItemText primary={`No users Available`} />\r\n                </ListItemButton>\r\n              )}              \r\n            </List>\r\n           \r\n              \r\n          {/* </Collapse> */}\r\n        </List>\r\n\r\n        \r\n\r\n        <List>\r\n         \r\n        </List>\r\n\r\n        \r\n\r\n\r\n        \r\n\r\n        {/* <List>\r\n          <ListItemButton onClick={handleClickOpenUsers}>\r\n            <ListItemIcon>\r\n              <ChatBubbleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary={`All Users (reduced to ${users.slice(0, 20).length})`}\r\n            />\r\n            {openUsers ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n          </ListItemButton>\r\n          <Collapse in={openUsers} timeout=\"auto\" unmountOnExit>\r\n            <List>\r\n              {users.slice(0, 20).map((val) => {\r\n                return (\r\n                  <ListItemButton sx={{ pl: 4 }} key={val.id}>\r\n                    <ListItemText primary={`${val.uid}`} />\r\n                  </ListItemButton>\r\n                );\r\n              })}\r\n            </List>\r\n          </Collapse>\r\n        </List> */}\r\n\r\n        \r\n      </div>\r\n      </div>\r\n\r\n      {/* For Create Channel */}\r\n      <FormDialoguesComponent\r\n        open={openForInviteUser}\r\n        handleClose={handleCloseForInviteUser}\r\n        dialogTitleText={\"Enter New Channel Name You Want to Create\"}\r\n        label={\"Channel Name\"}\r\n        type={`text`}\r\n        createNewChannelWithUser={createNewChannelWithUser}\r\n        isCreateChannel={isCreateChannel}\r\n        setIsCreateChannel={setIsCreateChannel}\r\n        setGetChannel={setGetChannel}\r\n      />\r\n      {/* For Send a DM Modal */}\r\n      <FormDialoguesComponent\r\n        open={openForSendDirectMessage}\r\n        handleClose={handleCloseForSendDirectMessage}\r\n        dialogTitleText={\"Who do you want to send a message to?\"}\r\n        label={\"Email\"}\r\n        type={`text`}\r\n        users={users}\r\n        sortByEmail={sortByEmail}\r\n        searchResults={searchResults}\r\n        intervalRetrieveMessagesWithUser={intervalRetrieveMessagesWithUser}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidebarComponent;\r\n","import { useState } from \"react\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FormDialoguesComponent from \"./FormDialoguesComponent\";\r\n\r\nconst TopBarComponent = ({\r\n  drawerWidth,\r\n  headers,\r\n  handleDrawerToggle,\r\n  channels,\r\n  selectedChannel,\r\n  inviteUserToAChannel,\r\n  userID,\r\n  selectedUser,\r\n  currentDateAndTime,\r\n  userInviteError,\r\n  setUserInviteError,\r\n  setGetEmail\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        className=\"appbar\"\r\n        position=\"fixed\"\r\n        sx={{\r\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n          ml: { sm: `${drawerWidth}px` },\r\n        }}\r\n      >\r\n        <Toolbar\r\n          style={{\r\n            backgroundColor: \"purple\",\r\n            justifyContent: \"space-between\",\r\n            paddingRight: \"250px\"}}\r\n        >\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"end\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2, display: { sm: \"none\" } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          {selectedChannel.name ? (\r\n            <Box onClick={() => handleClickOpen()}>\r\n              <ListItemButton>\r\n                <PersonAddIcon style={{fontSize: '1.5rem', marginRight: '0.5rem'}} />\r\n                <span style={{fontSize: '0.75rem'}}>\r\n                  {`Invite`}\r\n                </span>\r\n              </ListItemButton>\r\n            </Box>\r\n          ) : (\r\n            <Box style={{display: \"flex\", flexDirection: 'column'}}>\r\n            <span style={{fontSize: '0.75rem'}}>\r\n              {`${currentDateAndTime.currentDate}`}\r\n              </span>\r\n              <span style={{fontSize: '0.75rem'}}>\r\n              {`${currentDateAndTime.currentTime}`}\r\n              </span>\r\n            </Box>\r\n          )}\r\n\r\n          {selectedChannel.name || selectedUser.email ? (\r\n            <Box>\r\n              <ListItemButton>\r\n              <span style={{fontSize: '0.9rem'}}>\r\n                  {selectedChannel.name && `Channel: ${selectedChannel.name}`}{\" \"}\r\n                  {selectedUser.email && `Chat with ${selectedUser.email}`}\r\n                  </span>\r\n              </ListItemButton>\r\n            </Box>\r\n          ) : (\r\n            <Box>\r\n              <ListItemButton>\r\n              <span style={{fontSize: '1rem'}}>\r\n                  {\"Avion Slack App\"}\r\n                  </span>\r\n              </ListItemButton>\r\n            </Box>\r\n          )}\r\n\r\n          <Box style={{ textAlign: \"center\", display: 'flex', flexDirection: 'column'}}>\r\n            <span style={{fontSize: '0.75rem'}}>\r\n              {`${headers.uid}`}\r\n              </span>\r\n              <span style={{fontSize: '0.75rem'}}>\r\n              {`ID: ${userID}`}\r\n              </span>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Form Dialogues */}\r\n      <FormDialoguesComponent\r\n        open={open}\r\n        handleClose={handleClose}\r\n        dialogTitleText={\r\n          selectedChannel &&\r\n          `Enter email to invite to ${selectedChannel.name}`\r\n        }\r\n        channels={channels}\r\n        type={\"text\"}\r\n        label={\"Email\"}\r\n        inviteUserToAChannel={inviteUserToAChannel}\r\n        userInviteError={userInviteError}\r\n        setUserInviteError={setUserInviteError}\r\n        setGetEmail={setGetEmail}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopBarComponent;\r\n","import React from \"react\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\n\r\nexport default function SnackBarComponent({stateSB, setStateSB, messageSB}) {\r\n\r\n    const { vertical, horizontal, openSB } = stateSB;\r\n\r\n  return (        \r\n        <Snackbar     \r\n        open={openSB}\r\n        autoHideDuration={3000}      \r\n        anchorOrigin={{ vertical, horizontal }}        \r\n        onClose={()=>setStateSB({ ...stateSB, openSB: false })}\r\n        message={messageSB}\r\n        key={vertical + horizontal}\r\n      />    \r\n  );\r\n}\r\n","import Toolbar from \"@mui/material/Toolbar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport SnackBarComponent from \"./SnackbarComponent\";\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nconst ChatBodyComponent = ({\r\n  allMessagesRetrieved,\r\n  setMessage,\r\n  message,\r\n  createMessageInAChannel,\r\n  selectedChannel,\r\n  selectedUser,\r\n  createDirectMessageToAUser,\r\n  stateSB,\r\n  setStateSB,\r\n  getChannel,\r\n  getEmail,\r\n}) => {\r\n  return (\r\n    <>\r\n    { getChannel && <SnackBarComponent\r\n        stateSB={stateSB}\r\n        messageSB={`Successfully Created Channel: ${getChannel}!`}\r\n        setStateSB={setStateSB}\r\n      />} \r\n\r\n    { getEmail && <SnackBarComponent\r\n        stateSB={stateSB}\r\n        messageSB={`Successfully Added User: ${getEmail}!`}\r\n        setStateSB={setStateSB}\r\n      />}\r\n\r\n      <Box component=\"main\" sx={{flexGrow: 1, p: 3}} style={{padding: \"20px 20px 150px 360px\",}}>\r\n        <Toolbar />\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",            \r\n            width: '600px',            \r\n          }}\r\n        >\r\n          {allMessagesRetrieved?.length >= 1\r\n            ? allMessagesRetrieved.map((val) => {\r\n                return (\r\n                  <div key={val.id}>\r\n                  <div style={{display: 'flex', alignItems: 'center'}}>\r\n                    <div style={{padding: '20px 0'}}>\r\n                    <Avatar style={{marginRight: \"10px\", backgroundColor: \"purple\"}}>{val.sender.email.slice(0, 1).toUpperCase()}</Avatar>                     \r\n                    </div>\r\n                    <div>\r\n                    <p style={{margin: '0'}}> {`${val.sender.email.split(\"@\")[0]} says: at ${val.created_at}: `}</p>\r\n                    <p style={{margin: '0'}}>{val.body}</p>\r\n                    </div>\r\n                  </div>                   \r\n                  </div>\r\n                );\r\n              })\r\n            : (selectedChannel.name && (\r\n                <span className=\"greetings\">\r\n                  Channel: {selectedChannel.name} has no messages.\r\n                </span>\r\n              )) ||\r\n              (selectedUser.email && (\r\n                <span className=\"greetings\">\r\n                  You have no chat history with {selectedUser.email}. Send\r\n                  him/her a message!\r\n                </span>\r\n              )) || (\r\n                <span className=\"greetings\">\r\n                  Welcome to Avion Slack App! Hop on a channel or send a DM to\r\n                  get started!👀\r\n                </span>\r\n              )}\r\n        </Box>\r\n\r\n        {selectedChannel.name && (\r\n          <Box\r\n            className=\"message-area-container\"\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              createMessageInAChannel(message);\r\n              setMessage(\"\");\r\n            }}\r\n          >\r\n            <TextField\r\n              className=\"message-area\"\r\n              id=\"outlined-basic\"\r\n              label=\"Enter your message here\"\r\n              variant=\"outlined\"\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              value={message}\r\n            />\r\n          </Box>\r\n        )}\r\n\r\n        {selectedUser.email && (\r\n          <Box\r\n            className=\"message-area-container\"\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              createDirectMessageToAUser(message);\r\n              setMessage(\"\");\r\n            }}\r\n          >\r\n            <TextField\r\n              className=\"message-area\"\r\n              id=\"outlined-basic\"\r\n              label=\"Enter your message here\"\r\n              variant=\"outlined\"\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              value={message}\r\n            />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatBodyComponent;\r\n","import React from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport { ListItemButton } from '@mui/material';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst RightSideBar = ({users, channelMembers, usersDisplayed}) => {\r\n    return (\r\n        <Drawer\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          '& .MuiDrawer-paper': {\r\n            width: drawerWidth,\r\n            boxSizing: 'border-box',\r\n          },\r\n        }}\r\n        variant=\"permanent\"\r\n        anchor=\"right\"\r\n      >\r\n        <Toolbar style={{opacity: \"0\"}}/>\r\n        <Divider />\r\n        \r\n\r\n        \r\n      { usersDisplayed.home &&\r\n        (<>\r\n        <ListSubheader>ALL USERS</ListSubheader>\r\n        <List style={{ overflowX: \"hidden\" }}>\r\n        {users.slice(0, 100).map((val) => {\r\n                return (\r\n                  <ListItem  key={val.id}>\r\n                    <Avatar style={{marginRight: \"10px\", backgroundColor: \"purple\"}}>{val.email.slice(0, 1).toUpperCase()}</Avatar>\r\n                    <ListItemText style={{ margin: 0, width: '100%',}} primary={`${val.uid.split(\"@\")[0]}`} />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n        </List>\r\n        </>)\r\n            }\r\n\r\n        {usersDisplayed.channel &&\r\n        (<>\r\n        <ListSubheader>Channel Members</ListSubheader>\r\n        <List style={{ overflowX: \"hidden\" }}>\r\n        {channelMembers.map((val) => {\r\n                return (\r\n                  <ListItem key={val.id}>\r\n                     <Avatar style={{marginRight: \"10px\", backgroundColor: \"purple\"}}>{val.email.slice(0, 1).toUpperCase()}</Avatar>\r\n                    <ListItemText style={{ margin: 0, width: '100%',}} primary={`${val.email.split(\"@\")[0]}`} />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n        </List>\r\n        </>)\r\n        }\r\n\r\n        <Divider />\r\n      </Drawer>\r\n    )\r\n}\r\n\r\nexport default RightSideBar\r\n","import Box from \"@mui/material/Box\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport SidebarComponent from \"./SidebarComponent\";\r\nimport TopBarComponent from \"./TopBarComponent\";\r\nimport ChatBodyComponent from \"./ChatBodyComponent\";\r\nimport RightSideBar from \"./RightSideBar\";\r\nimport { useState } from \"react\";\r\n\r\nconst MainChatComponent = ({\r\n  headers,\r\n  users,\r\n  channels,\r\n  handleClickOpenChannel,\r\n  openChannel,\r\n  inviteUserToAChannel,\r\n  createNewChannelWithUser,\r\n  handleClickOpenUsers,\r\n  openUsers,\r\n  handleDrawerToggle,\r\n  mobileOpen,\r\n  allMessagesRetrieved,\r\n  message,\r\n  setMessage,\r\n  isAChannelSelected,\r\n  selectedChannel,\r\n  setSelectedChannel,\r\n  createMessageInAChannel,\r\n  intervalRetrieveMessages,\r\n  userID,\r\n  returnToHome,\r\n  sortByEmail,\r\n  searchResults,\r\n  selectedUser,\r\n  createDirectMessageToAUser,\r\n  intervalRetrieveMessagesWithUser,\r\n  currentDateAndTime,\r\n  isCreateChannel,\r\n  setIsCreateChannel,\r\n  userInviteError,\r\n  setUserInviteError,\r\n  stateSB,\r\n  setStateSB,\r\n  retrieveChannelUsers,\r\n  channelMembers,\r\n  usersDisplayed\r\n}) => {\r\n  const drawerWidth = 320;\r\n  //   const {window} = props;\r\n  //   const container =\r\n  //     window !== undefined ? () => window().document.body : undefined;\r\n  const [getChannel, setGetChannel] = useState('')\r\n  const [getEmail, setGetEmail] = useState('')\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <CssBaseline />\r\n        <TopBarComponent\r\n          drawerWidth={drawerWidth}\r\n          headers={headers}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          isAChannelSelected={isAChannelSelected}\r\n          selectedChannel={selectedChannel}\r\n          inviteUserToAChannel={inviteUserToAChannel}\r\n          userID={userID}\r\n          selectedUser={selectedUser}\r\n          currentDateAndTime={currentDateAndTime}\r\n          userInviteError={userInviteError}\r\n          setUserInviteError={setUserInviteError}\r\n          setGetEmail={setGetEmail}    \r\n        />\r\n        <Box\r\n          component=\"nav\"\r\n          sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n          aria-label=\"mailbox folders\"\r\n        >\r\n          <Drawer\r\n            // container={container}\r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n            sx={{\r\n              display: { xs: \"block\", sm: \"none\" },\r\n              \"& .MuiDrawer-paper\": {\r\n                boxSizing: \"border-box\",\r\n                width: drawerWidth,\r\n              },\r\n            }}\r\n          >\r\n            {\r\n              <SidebarComponent\r\n                handleClickOpenChannel={handleClickOpenChannel}\r\n                openChannel={openChannel}\r\n                createNewChannelWithUser={createNewChannelWithUser}\r\n                handleClickOpenUsers={handleClickOpenUsers}\r\n                users={users}\r\n                openUsers={openUsers}\r\n                setSelectedChannel={setSelectedChannel}\r\n                intervalRetrieveMessages={intervalRetrieveMessages}\r\n                returnToHome={returnToHome}\r\n                sortByEmail={sortByEmail}\r\n                searchResults={searchResults}\r\n                intervalRetrieveMessagesWithUser={intervalRetrieveMessagesWithUser}\r\n                channels={channels}\r\n                isCreateChannel={isCreateChannel}\r\n                setIsCreateChannel={setIsCreateChannel}   \r\n                setGetChannel={setGetChannel} \r\n                retrieveChannelUsers={retrieveChannelUsers}                        \r\n              />\r\n            }\r\n          </Drawer>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            sx={{\r\n              display: { xs: \"none\", sm: \"block\" },\r\n              \"& .MuiDrawer-paper\": {\r\n                boxSizing: \"border-box\",\r\n                width: drawerWidth,\r\n              },\r\n            }}\r\n            open\r\n          >\r\n            {\r\n              <SidebarComponent\r\n                handleClickOpenChannel={handleClickOpenChannel}\r\n                openChannel={openChannel}\r\n                createNewChannelWithUser={createNewChannelWithUser}\r\n                handleClickOpenUsers={handleClickOpenUsers}\r\n                users={users}\r\n                openUsers={openUsers}\r\n                setSelectedChannel={setSelectedChannel}\r\n                intervalRetrieveMessages={intervalRetrieveMessages}\r\n                returnToHome={returnToHome}\r\n                sortByEmail={sortByEmail}\r\n                searchResults={searchResults}\r\n                intervalRetrieveMessagesWithUser={intervalRetrieveMessagesWithUser}\r\n                channels={channels}\r\n                isCreateChannel={isCreateChannel}\r\n                setIsCreateChannel={setIsCreateChannel}\r\n                setGetChannel={setGetChannel}     \r\n                retrieveChannelUsers={retrieveChannelUsers}                \r\n              />\r\n            }\r\n          </Drawer>\r\n          </Box>\r\n\r\n\r\n          <RightSideBar\r\n            users={users}\r\n            channelMembers={channelMembers}\r\n            usersDisplayed={usersDisplayed}\r\n            />        \r\n\r\n            \r\n        <ChatBodyComponent\r\n          allMessagesRetrieved={allMessagesRetrieved}\r\n          setMessage={setMessage}\r\n          message={message}\r\n          createMessageInAChannel={createMessageInAChannel}\r\n          selectedChannel={selectedChannel}\r\n          selectedUser={selectedUser}\r\n          createDirectMessageToAUser={createDirectMessageToAUser}\r\n          stateSB={stateSB}\r\n          setStateSB={setStateSB}          \r\n          getChannel={getChannel}\r\n          getEmail={getEmail}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainChatComponent;\r\n","import React from \"react\";\r\nimport Loaders from \"./Loaders\";\r\nimport useHooks from \"./hooks\";\r\nimport MainChatComponent from \"./MainChatComponent\";\r\nimport \"./styles.css\";\r\n\r\nconst Index = () => {\r\n  const {\r\n    headers,\r\n    users,\r\n    channels,\r\n    handleClickOpenChannel,\r\n    openChannel,\r\n    inviteUserToAChannel,\r\n    createNewChannelWithUser,\r\n    handleClickOpenUsers,\r\n    openUsers,\r\n    handleDrawerToggle,\r\n    mobileOpen,\r\n    allMessagesRetrieved,\r\n    message,\r\n    setMessage,\r\n    isAChannelSelected,\r\n    selectedChannel,\r\n    setSelectedChannel,\r\n    createMessageInAChannel,\r\n    intervalRetrieveMessages,\r\n    userID,\r\n    returnToHome,\r\n    sortByEmail,\r\n    searchResults,\r\n    selectedUser,\r\n    createDirectMessageToAUser,\r\n    intervalRetrieveMessagesWithUser,\r\n    loading,\r\n    currentDateAndTime,\r\n    isCreateChannel,\r\n    setIsCreateChannel,\r\n    userInviteError,\r\n    setUserInviteError,\r\n    stateSB,\r\n    setStateSB,\r\n    retrieveChannelUsers,\r\n    channelMembers,\r\n    usersDisplayed\r\n  } = useHooks();\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loaders loading={loading} />\r\n      ) : (\r\n        <MainChatComponent\r\n          headers={headers}\r\n          users={users}\r\n          channels={channels}\r\n          handleClickOpenChannel={handleClickOpenChannel}\r\n          openChannel={openChannel}\r\n          inviteUserToAChannel={inviteUserToAChannel}\r\n          createNewChannelWithUser={createNewChannelWithUser}\r\n          handleClickOpenUsers={handleClickOpenUsers}\r\n          openUsers={openUsers}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          mobileOpen={mobileOpen}\r\n          allMessagesRetrieved={allMessagesRetrieved}\r\n          message={message}\r\n          setMessage={setMessage}\r\n          isAChannelSelected={isAChannelSelected}\r\n          selectedChannel={selectedChannel}\r\n          setSelectedChannel={setSelectedChannel}\r\n          createMessageInAChannel={createMessageInAChannel}\r\n          intervalRetrieveMessages={intervalRetrieveMessages}\r\n          userID={userID}\r\n          returnToHome={returnToHome}\r\n          sortByEmail={sortByEmail}\r\n          searchResults={searchResults}\r\n          selectedUser={selectedUser}\r\n          createDirectMessageToAUser={createDirectMessageToAUser}\r\n          intervalRetrieveMessagesWithUser={intervalRetrieveMessagesWithUser}\r\n          currentDateAndTime={currentDateAndTime}\r\n          isCreateChannel={isCreateChannel}\r\n          setIsCreateChannel={setIsCreateChannel}\r\n          userInviteError={userInviteError}\r\n          setUserInviteError={setUserInviteError}\r\n          stateSB={stateSB}\r\n          setStateSB={setStateSB}\r\n          retrieveChannelUsers={retrieveChannelUsers}\r\n          channelMembers={channelMembers}\r\n          usersDisplayed={usersDisplayed}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,  \r\n} from \"react-router-dom\";\r\nimport Home from '../Home'\r\nimport Chat from '../Chat'\r\n\r\nconst Routes = () => {\r\n    return (\r\n      <>\r\n      <Router>              \r\n           <Switch>           \r\n            <Route exact path=\"/\" comp={Home}>\r\n              <Home />\r\n            </Route>            \r\n            <Route exact path=\"/chat\" comp={Chat}>\r\n              <Chat />\r\n            </Route>          \r\n          </Switch>       \r\n      </Router>\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default Routes","import './App.css';\nimport Routes from './components/Routes'\n\n\nconst App = () => { \n\n  \n  return (\n    \n<Routes/>\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}