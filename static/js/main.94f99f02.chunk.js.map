{"version":3,"sources":["components/Home/useSessionStorage.js","components/Chat/hooks.js","components/Home/hooks.js","components/Home/index.js","components/Chat/Loaders.js","components/Chat/FormDialoguesComponent.js","components/Chat/SidebarComponent.js","components/Chat/TopBarComponent.js","components/Chat/ChatBodyComponent.js","components/Chat/MainChatComponent.js","components/Chat/index.js","components/Routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["useSessionStorage","req1","req2","key","initialValue","useState","item","window","sessionStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Hooks","loading","setLoading","useEffect","setTimeout","setHeaders","setUserID","password","setPassword","secondPassword","setSecondPassword","email","setEmail","isRegistering","setIsRegistering","route","setRoute","passwordsDoNotMatch","invalidEmailFormat","emailIsEmpty","passwordIsEmpty","passwordTooShort","validInfo","setValidInfo","successful","failed","isRegister","setIsRegister","isLogin","setIsLogin","registerUser","axios","url","data","headers","method","then","resetUserInput","catch","transition","logIn","e","preventDefault","includes","res","id","register","length","theme","createTheme","SignIn","useHooks","to","className","color","size","up","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","Typography","variant","onClick","noValidate","mt","TextField","onChange","target","margin","fullWidth","label","type","autoFocus","Button","mb","backgroundColor","Grid","container","Link","style","cursor","align","Date","getFullYear","Loaders","userID","users","setUsers","channels","setChannels","message","setMessage","allMessagesRetrieved","setAllMessagesRetrieved","mobileOpen","setMobileOpen","searchResults","setSearchResults","selectedUser","setSelectedUser","withoutCurrentUser","filter","user","uid","success","isCreateChannel","setIsCreateChannel","userInviteError","setUserInviteError","openChannel","setOpenChannel","openUsers","setOpenUsers","selectedChannel","setSelectedChannel","client","expiry","getCurrentTime","retrieveAllMessagesInAChannel","retrieveAllMessagesWithUser","userData","currentTime","currentDate","currentDateAndTime","setCurrentDateAndTime","d","weekday","Array","setInterval","time","toLocaleTimeString","hour","minute","currentDay","getDay","handleClickOpenChannel","inviteUserToAChannel","userEmail","handleClose","extractedId","member_id","errors","createNewChannelWithUser","channelName","setValueFromForm","name","user_ids","join","handleClickOpenUsers","handleDrawerToggle","createMessageInAChannel","receiver_id","receiver_class","body","intervalRetrieveMessages","clearTimeout","returnToHome","sortByEmail","val","sortedUsers","createDirectMessageToAUser","intervalRetrieveMessagesWithUser","FormDialoguesComponent","open","dialogTitleText","valueFromForm","Dialog","onClose","DialogTitle","pb","DialogContent","List","map","ListItemButton","pl","ListItemText","primary","DialogActions","SidebarComponent","openForInviteUser","setOpenForInviteUser","openForSendDirectMessage","setOpenForSendDirectMessage","Toolbar","ListItemIcon","Collapse","in","timeout","unmountOnExit","disablePadding","channel","slice","TopBarComponent","drawerWidth","setOpen","AppBar","position","width","sm","ml","justifyContent","IconButton","edge","mr","noWrap","textAlign","ChatBodyComponent","flexGrow","p","padding","sender","created_at","autoComplete","onSubmit","MainChatComponent","isAChannelSelected","flexShrink","Drawer","ModalProps","keepMounted","xs","boxSizing","Index","Routes","exact","path","comp","Home","Chat","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94f99f02.chunk.js","sourcesContent":["import {useState} from 'react';\r\n\r\n// Hook\r\nfunction useSessionStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from session storage by key\r\n        const item = window.sessionStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to sessionStorage.\r\n    const setValue = (value) => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to session storage\r\n        window.sessionStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  export default useSessionStorage;","import useSessionStorage from \"../Home/useSessionStorage.js\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nvar req1;\r\nvar req2;\r\n\r\nconst Hooks = () => {\r\n  const [headers] = useSessionStorage(\"headers\", []);\r\n  const [userID] = useSessionStorage(\"userID\", []);\r\n  const [users, setUsers] = useState([]);\r\n  const [channels, setChannels] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [allMessagesRetrieved, setAllMessagesRetrieved] = useState([]);\r\n  const [mobileOpen, setMobileOpen] = useState(false);  \r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState([]);\r\n  \r\n  const withoutCurrentUser = users.filter(\r\n    (user) => !user.email.includes(headers.uid)\r\n  );\r\n  const [isCreateChannel, setIsCreateChannel] = useState({\r\n    success: false,\r\n    failed: false,\r\n  });\r\n\r\n  const [userInviteError, setUserInviteError] = useState(\"\");\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const [openChannel, setOpenChannel] = useState(false);\r\n  const [openUsers, setOpenUsers] = useState(false);\r\n\r\n  const handleClickOpenChannel = () => {\r\n    setOpenChannel(!openChannel);\r\n  };\r\n\r\n  const handleClickOpenUsers = () => {\r\n    setOpenUsers(!openUsers);\r\n  };\r\n\r\n  const [selectedChannel, setSelectedChannel] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getAllUsers = () => {\r\n      axios({\r\n        url: \"http://206.189.91.54/api/v1/users\",\r\n        data: {},\r\n        method: \"GET\",\r\n        headers: {\r\n          \"access-token\": headers[\"access-token\"],\r\n          client: headers.client,\r\n          expiry: headers.expiry,\r\n          uid: headers.uid,\r\n        },\r\n      })\r\n        .then((res) => {setUsers(res.data.data)})\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    getAllUsers();\r\n\r\n    const retrieveChannels = () => {\r\n      axios({\r\n        url: \"http://206.189.91.54/api/v1/channels\",\r\n        data: {},\r\n        method: \"GET\",\r\n        headers: {\r\n          \"access-token\": headers[\"access-token\"],\r\n          client: headers.client,\r\n          expiry: headers.expiry,\r\n          uid: headers.uid,\r\n        },\r\n      })\r\n        .then((res) => setChannels(res.data.data))\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    retrieveChannels();\r\n    getCurrentTime();\r\n  }, [headers]);\r\n\r\n  const retrieveChannels = () => {\r\n    axios({\r\n      url: \"http://206.189.91.54/api/v1/channels\",\r\n      data: {},\r\n      method: \"GET\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        client: headers.client,\r\n        expiry: headers.expiry,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then((res) => setChannels(res.data.data))\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const intervalRetrieveMessages = (id) => {\r\n    clearTimeout(req1);\r\n    clearTimeout(req2);    \r\n    setSelectedUser([]);\r\n    retrieveAllMessagesInAChannel(id);  \r\n      req1 = setInterval(() => {\r\n        retrieveAllMessagesInAChannel(id);\r\n      }, 1500);  \r\n  };\r\n\r\n  const retrieveAllMessagesInAChannel = (id) => {\r\n    axios({\r\n      url: `http://206.189.91.54/api/v1/messages?receiver_id=${id}&receiver_class=Channel`,\r\n      data: {},\r\n      method: \"GET\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then((res) => {setAllMessagesRetrieved(res.data.data); console.log(res)})\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const inviteUserToAChannel = (userEmail, handleClose) => {\r\n    const extractedId = users.filter(user=>user.email===userEmail) \r\n\r\n    axios({\r\n      url: \"http://206.189.91.54/api/v1/channel/add_member\",\r\n      data: {\r\n        id: `${selectedChannel.id}`,\r\n        member_id: `${extractedId[0]?.id}`,\r\n      },\r\n      method: \"POST\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        uid: headers.uid,\r\n        client: headers.client,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.errors) {\r\n          setUserInviteError(res.data.errors);\r\n        } else {\r\n          handleClose();\r\n          setUserInviteError(\"\");\r\n        }\r\n        console.log(res);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const createNewChannelWithUser = (\r\n    channelName,\r\n    handleClose,\r\n    setValueFromForm\r\n  ) => {\r\n    axios({\r\n      url: \"http://206.189.91.54/api/v1/channels\",\r\n      data: {\r\n        name: `${channelName}`,\r\n        user_ids: [userID], // [] insert member id or id's here\r\n      },\r\n      method: \"POST\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        retrieveChannels();\r\n        if (res.data.data?.id) {\r\n          setIsCreateChannel({ success: true });\r\n          handleClose();\r\n          setValueFromForm(\"\");\r\n        } else {\r\n          const errors = res.data.errors;\r\n          setIsCreateChannel({ failed: [...errors].join(\". \") });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const createMessageInAChannel = (message) => {\r\n    axios({\r\n      url: `http://206.189.91.54/api/v1/messages`,\r\n      data: {\r\n        receiver_id: `${selectedChannel.id}`,\r\n        receiver_class: \"Channel\",\r\n        body: `${message}`,\r\n      },\r\n      method: \"POST\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then(retrieveAllMessagesInAChannel(selectedChannel.id))\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const retrieveAllMessagesWithUser = (userData) => {\r\n    axios({\r\n      url: `http://206.189.91.54/api/v1/messages?receiver_id=${userData.id}&receiver_class=User`,\r\n      method: \"GET\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setAllMessagesRetrieved(res.data.data)\r\n        console.log(res);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const intervalRetrieveMessagesWithUser = (userData) => {\r\n    clearTimeout(req1);\r\n    clearTimeout(req2);\r\n    setSelectedChannel([]);\r\n    setSelectedUser(userData);\r\n    retrieveAllMessagesWithUser(userData);\r\n    setSearchResults([]);\r\n         req2 = setInterval(() => {\r\n        retrieveAllMessagesWithUser(userData);\r\n      }, 1500);  \r\n  };\r\n\r\n  const createDirectMessageToAUser = (message) => {\r\n    axios({\r\n      url: `http://206.189.91.54/api/v1/messages`,\r\n      data: {\r\n        receiver_id: `${selectedUser.id}`,\r\n        receiver_class: \"User\",\r\n        body: `${message}`,\r\n      },\r\n      method: \"POST\",\r\n      headers: {\r\n        \"access-token\": headers[\"access-token\"],\r\n        expiry: headers.expiry,\r\n        client: headers.client,\r\n        uid: headers.uid,\r\n      },\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  const returnToHome = () => {\r\n    clearTimeout(req1);\r\n    clearTimeout(req2);\r\n    setAllMessagesRetrieved([]);\r\n    setSelectedChannel([]);\r\n    setSelectedUser([]);\r\n  };\r\n\r\n  const sortByEmail = (val) => {\r\n    // setTimeout(() => {\r\n      const sortedUsers = withoutCurrentUser.filter((value) =>\r\n        value.email.includes(val)\r\n      );\r\n      setSearchResults(sortedUsers);\r\n    // }, 500);\r\n  };\r\n\r\n  const [currentDateAndTime, setCurrentDateAndTime] = useState({\r\n    currentTime: \"\",\r\n    currentDate: \"\",\r\n  });\r\n\r\n  const getCurrentTime = () => {\r\n    var d = new Date();\r\n    var weekday = new Array(7);\r\n    weekday[0] = \"Sunday\";\r\n    weekday[1] = \"Monday\";\r\n    weekday[2] = \"Tuesday\";\r\n    weekday[3] = \"Wednesday\";\r\n    weekday[4] = \"Thursday\";\r\n    weekday[5] = \"Friday\";\r\n    weekday[6] = \"Saturday\";\r\n    setInterval(() => {\r\n      const time = new Date().toLocaleTimeString([], {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      });\r\n      var currentDay = weekday[d.getDay()];\r\n      setCurrentDateAndTime({ currentTime: time, currentDate: currentDay });\r\n    }, 1000);\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    headers,\r\n    users,\r\n    channels,\r\n    handleClickOpenChannel,\r\n    openChannel,\r\n    inviteUserToAChannel,\r\n    createNewChannelWithUser,\r\n    handleClickOpenUsers,\r\n    openUsers,\r\n    handleDrawerToggle,\r\n    mobileOpen,\r\n    allMessagesRetrieved,\r\n    message,\r\n    setMessage,\r\n    selectedChannel,\r\n    setSelectedChannel,\r\n    createMessageInAChannel,\r\n    intervalRetrieveMessages,\r\n    userID,\r\n    returnToHome,\r\n    sortByEmail,\r\n    searchResults,\r\n    selectedUser,\r\n    createDirectMessageToAUser,\r\n    intervalRetrieveMessagesWithUser,\r\n    currentDateAndTime,\r\n    isCreateChannel,\r\n    setIsCreateChannel,\r\n    userInviteError,\r\n    setUserInviteError,\r\n  };\r\n};\r\n\r\nexport default Hooks;\r\n","import {useState, useEffect} from 'react'\r\nimport useSessionStorage from './useSessionStorage'\r\nimport axios from 'axios';\r\n\r\nconst Hooks = () => {\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    setTimeout(() => {\r\n    setLoading(false)\r\n    }, 3000);\r\n  }, [])\r\n\r\n    const [headers, setHeaders] = useSessionStorage('headers', [])\r\n    const [userID, setUserID] = useSessionStorage('userID', []);\r\n    const [password, setPassword] = useState('')\r\n    const [secondPassword, setSecondPassword] = useState('')    \r\n    const [email, setEmail] = useState('')    \r\n    const [isRegistering, setIsRegistering] = useState(false)\r\n    const [route, setRoute] = useState(false)   \r\n    const [validInfo, setValidInfo] = useState({\r\n            passwordsDoNotMatch: false,\r\n            invalidEmailFormat: false,\r\n            emailIsEmpty: false,\r\n            passwordIsEmpty: false,\r\n            passwordTooShort: false,\r\n        })\r\n    const [isRegister, setIsRegister] = useState({\r\n           successful: false,\r\n           failed: false,           \r\n        })\r\n    const [isLogin, setIsLogin] = useState({\r\n           successful: false,\r\n           failed: false\r\n        })\r\n    \r\n        \r\n    const registerUser = () => {      \r\n\r\n         axios({      \r\n            url: 'http://206.189.91.54/api/v1/auth',\r\n            data: {'email': email,\r\n                  'password': password,\r\n                  'password_confirmation': secondPassword},\r\n            headers: {},\r\n            method: 'POST',\r\n            }).then(() => {                \r\n                setIsRegister({successful:true})                \r\n                resetUserInput()\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n                setIsRegister({failed: true})\r\n            })\r\n        \r\n    }\r\n\r\n    const register = (e) => {\r\n        e.preventDefault()\r\n        if(!email.includes(\"@\" && \".\")) {            \r\n        setValidInfo({invalidEmailFormat: true})}   \r\n            else if (!password || !secondPassword){\r\n            setValidInfo({passwordIsEmpty: true})}     \r\n                 else if (password !== secondPassword) {\r\n                setValidInfo({passwordsDoNotMatch: true})\r\n                    } else if (password.length < 6) {\r\n                      setValidInfo({passwordTooShort: true})\r\n                    }\r\n         else {         \r\n           registerUser()\r\n         }\r\n\r\n    }\r\n\r\n    const  loginUser = () =>{\r\n\r\n       axios({      \r\n        url: 'http://206.189.91.54/api/v1/auth/sign_in',\r\n        data: {'email': email,\r\n              'password': password},\r\n        headers: {},\r\n        method: 'POST',\r\n        }).then((res) => {          \r\n          setUserID(res.data.data.id)\r\n          setHeaders(res.headers)\r\n          transition()\r\n          resetUserInput()          \r\n        })   \r\n        .catch((error) => {\r\n            console.log(error)\r\n            setIsLogin({failed: true})\r\n        })         \r\n    }    \r\n \r\n   const logIn = (e) =>{   \r\n     e.preventDefault()  \r\n        if(!email) {\r\n        setValidInfo({emailIsEmpty: true})\r\n        } else if (!password){\r\n            setValidInfo({passwordIsEmpty: true}) \r\n            } else if(!email.includes(\"@\" && \".\")) {            \r\n             setValidInfo({invalidEmailFormat: true})                \r\n                } else { \r\n             loginUser()\r\n    }\r\n   } \r\n\r\n\r\n   const resetUserInput = () => {\r\n     setEmail('')\r\n     setPassword('')\r\n     setSecondPassword('')\r\n   }\r\n\r\n   const transition = () => {\r\n    setLoading(true)\r\n    setTimeout(() => {setLoading(false); setRoute(true)}, 2000)\r\n   }\r\n\r\n    return {               \r\n        password,\r\n        setPassword,\r\n        email,\r\n        setEmail,                \r\n        logIn,                \r\n        setIsLogin,\r\n        isLogin,\r\n        isRegistering,\r\n        setIsRegistering,\r\n        secondPassword,\r\n        setSecondPassword,\r\n        register,\r\n        registerUser,\r\n        isRegister,\r\n        setIsRegister,\r\n        validInfo,\r\n        setValidInfo,\r\n        setLoading,\r\n        loading,\r\n        transition,\r\n        route,\r\n        setRoute,          \r\n    }   \r\n}\r\n\r\nexport default Hooks\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport useHooks from \"./hooks\";\r\nimport \"./styles.css\";\r\nimport { HashLoader } from \"react-spinners\";\r\nimport { Fade } from \"react-reveal\";\r\nimport { CgSlack } from \"react-icons/cg\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link as ReactLink } from \"react-router-dom\";\r\n\r\nconst theme = createTheme();\r\n\r\nexport const SignIn = () => {\r\n  const {\r\n    password,\r\n    setPassword,\r\n    secondPassword,\r\n    setSecondPassword,\r\n    email,\r\n    setEmail,\r\n    logIn,\r\n    isLogin,\r\n    setIsLogin,\r\n    isRegistering,\r\n    setIsRegistering,\r\n    register,\r\n    isRegister,\r\n    setIsRegister,\r\n    setValidInfo,\r\n    validInfo,\r\n    loading,\r\n    route,    \r\n} = useHooks() \r\n  \r\n  return (\r\n    <>\r\n      \r\n      {route && <Redirect to=\"/chat\" />}\r\n      {loading ? (\r\n        <>\r\n        \r\n          <div className=\"loader\">\r\n            <HashLoader loading={loading} color={\"purple\"} size={80} />\r\n            <h3>Loading...</h3>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n        <div className=\"background\"></div>\r\n          <Fade up>\r\n            <div className=\"heading-container\">\r\n              <span className=\"heading\">\r\n                <CgSlack />\r\n                Avion Slack App\r\n              </span>\r\n              <span className=\"website\">avionschool.slack.com</span>\r\n            </div>\r\n            <ThemeProvider theme={theme}>\r\n              <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <Box\r\n                  sx={{\r\n                    marginTop: 5,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Avatar sx={{ m: 1, bgcolor: \"purple\" }}></Avatar>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                    {isRegistering ? \"Register \" : \"Sign in\"}\r\n                  </Typography>\r\n                  <Box\r\n                    component=\"form\"\r\n                    onClick={() => {\r\n                      setIsLogin(false);\r\n                      setIsRegister(false);\r\n                      setValidInfo(false);\r\n                    }}\r\n                    noValidate\r\n                    sx={{ mt: 1 }}\r\n                  >\r\n                    <TextField\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      value={email}\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      label=\"Email Address\"\r\n                      type=\"text\"\r\n                      autoFocus\r\n                    />\r\n\r\n                    <TextField\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      value={password}\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                    />\r\n\r\n                    {isRegistering && (\r\n                      <Fade up>\r\n                        {\" \"}\r\n                        <TextField\r\n                          onChange={(e) => setSecondPassword(e.target.value)}\r\n                          value={secondPassword}\r\n                          margin=\"normal\"\r\n                          fullWidth\r\n                          label=\"Re-type Password\"\r\n                          type=\"password\"\r\n                        />{\" \"}\r\n                      </Fade>\r\n                    )}\r\n                    {isLogin.failed && (\r\n                      <span className=\"failed\">Invalid email or password</span>\r\n                    )}\r\n                    {isRegister.successful && (\r\n                      <span className=\"success\">Registration Success!</span>\r\n                    )}\r\n                    {isRegister.failed && (\r\n                      <span className=\"failed\">Email already taken</span>\r\n                    )}\r\n                    {validInfo.invalidEmailFormat && (\r\n                      <span className=\"failed\">Invalid email format</span>\r\n                    )}\r\n                    {validInfo.emailIsEmpty && (\r\n                      <span className=\"failed\">Email is required</span>\r\n                    )}\r\n                    {validInfo.passwordIsEmpty && (\r\n                      <span className=\"failed\">Password is required</span>\r\n                    )}\r\n                    {validInfo.passwordsDoNotMatch && (\r\n                      <span className=\"failed\">Passwords do not match</span>\r\n                    )}\r\n                  </Box>\r\n\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      isRegistering ? register(e) : logIn(e);\r\n                    }}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2, backgroundColor: \"purple\" }}\r\n                  >\r\n                    {isRegistering ? \"Sign up\" : \"Sign In\"}\r\n                  </Button>\r\n                  <Grid container>\r\n                    <Grid item>\r\n                      <Link\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => setIsRegistering(!isRegistering)}\r\n                        variant=\"body2\"\r\n                      >\r\n                        {isRegistering\r\n                          ? \"Already have an account? Sign in\"\r\n                          : \"Don't have an account? Sign Up\"}\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <ReactLink\r\n                    to=\"/chat\"\r\n                    style={{\r\n                      marginTop: \"1rem\",\r\n                      cursor: \"pointer\",\r\n                      color: \"#2C82D5\",\r\n                    }}\r\n                  >\r\n                    Go to Chat App\r\n                  </ReactLink>\r\n                </Box>\r\n                <Typography\r\n                  className=\"copyright\"\r\n                  variant=\"body2\"\r\n                  color=\"text.secondary\"\r\n                  align=\"center\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                  {\"Copyright © \"}\r\n                  <span color=\"inherit\">Avion School Slack App</span>{\" \"}\r\n                  {new Date().getFullYear()}\r\n                  {\".\"}\r\n                </Typography>\r\n              </Container>\r\n            </ThemeProvider>\r\n          </Fade>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","\r\nimport { HashLoader } from \"react-spinners\";\r\n\r\nconst Loaders = ({loading}) => {\r\n    return (\r\n        <>             \r\n        <div className=\"loader\">\r\n          <HashLoader loading={loading} color={\"purple\"} size={80}/> \r\n          <h3>Almost there...</h3>\r\n          </div> \r\n          </>\r\n    )\r\n}\r\n\r\nexport default Loaders\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\n\r\nconst FormDialoguesComponent = ({\r\n  open,\r\n  handleClose,\r\n  dialogTitleText,\r\n  inviteUserToAChannel,\r\n  label,\r\n  type,\r\n  createNewChannelWithUser,\r\n  intervalRetrieveMessagesWithUser,\r\n  sortByEmail,\r\n  searchResults,\r\n  isCreateChannel,\r\n  setIsCreateChannel,\r\n  userInviteError,\r\n  setUserInviteError,\r\n}) => {\r\n  const [valueFromForm, setValueFromForm] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle sx={{ pb: 1 }}>{dialogTitleText}</DialogTitle>\r\n        <DialogContent>\r\n          {sortByEmail && (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label={label}\r\n              type={type}\r\n              fullWidth\r\n              variant=\"standard\"\r\n              onChange={(e) => {\r\n                setValueFromForm(e.target.value);\r\n                sortByEmail(valueFromForm);\r\n              }}\r\n              value={valueFromForm}\r\n            />\r\n          )}\r\n\r\n          {searchResults && (\r\n            <List className=\"list-results\">\r\n              {searchResults.map((val) => {\r\n                return (\r\n                  <ListItemButton\r\n                    sx={{ pl: 4 }}\r\n                    key={val.id}\r\n                    onClick={() => {\r\n                      intervalRetrieveMessagesWithUser(val);\r\n                      handleClose();\r\n                      setValueFromForm(\"\");\r\n                    }}\r\n                  >\r\n                    <ListItemText primary={`${val.uid}`} />\r\n                  </ListItemButton>\r\n                );\r\n              })}\r\n            </List>\r\n          )}\r\n\r\n          {inviteUserToAChannel && (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label={label}\r\n              type={type}\r\n              fullWidth\r\n              variant=\"standard\"\r\n              onChange={(e) => {\r\n                setValueFromForm(e.target.value);\r\n              }}\r\n              value={valueFromForm}\r\n            />\r\n          )}\r\n\r\n          {userInviteError && (\r\n            <span style={{ color: \"red\" }}>{userInviteError}</span>\r\n          )}\r\n\r\n          {createNewChannelWithUser && (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label={label}\r\n              type={type}\r\n              fullWidth\r\n              variant=\"standard\"\r\n              onChange={(e) => {\r\n                setValueFromForm(e.target.value);\r\n              }}\r\n              value={valueFromForm}\r\n            />\r\n          )}\r\n          {isCreateChannel?.failed && (\r\n            <span style={{ color: \"red\" }}>{[...isCreateChannel.failed]}</span>\r\n          )}\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleClose();\r\n              setValueFromForm(\"\");\r\n              isCreateChannel && setIsCreateChannel(false);\r\n              userInviteError && setUserInviteError(\"\");\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          {inviteUserToAChannel && (\r\n            <Button\r\n              onClick={() => {\r\n                inviteUserToAChannel(valueFromForm, handleClose);\r\n                setValueFromForm(\"\");\r\n              }}\r\n            >\r\n              Invite\r\n            </Button>\r\n          )}\r\n          {createNewChannelWithUser && (\r\n            <Button\r\n              sx={{ alignItems: \"center\" }}\r\n              onClick={() => {\r\n                createNewChannelWithUser(\r\n                  valueFromForm,\r\n                  handleClose,\r\n                  setValueFromForm\r\n                );\r\n              }}\r\n            >\r\n              Create\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormDialoguesComponent;\r\n","import React, { useState } from \"react\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ChatBubbleIcon from \"@mui/icons-material/ChatBubble\";\r\nimport ForumIcon from \"@mui/icons-material/Forum\";\r\nimport GroupAddIcon from \"@mui/icons-material/GroupAdd\";\r\nimport FormDialoguesComponent from \"./FormDialoguesComponent\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport GroupIcon from \"@mui/icons-material/Group\";\r\n\r\nconst SidebarComponent = ({\r\n  handleClickOpenChannel,\r\n  openChannel,\r\n  channels,\r\n  createNewChannelWithUser,\r\n  handleClickOpenUsers,\r\n  users,\r\n  openUsers,\r\n  setSelectedChannel,\r\n  intervalRetrieveMessages,\r\n  returnToHome,\r\n  sortByEmail,\r\n  searchResults,\r\n  intervalRetrieveMessagesWithUser,\r\n  isCreateChannel,\r\n  setIsCreateChannel,\r\n}) => {\r\n  const [openForInviteUser, setOpenForInviteUser] = useState(false);\r\n  const handleClickOpenForInviteUser = () => {\r\n    setOpenForInviteUser(true);\r\n  };\r\n  const handleCloseForInviteUser = () => {\r\n    setOpenForInviteUser(false);\r\n  };\r\n\r\n  const [openForSendDirectMessage, setOpenForSendDirectMessage] =\r\n    useState(false);\r\n  const handleClickOpenSendDirectMessage = () => {\r\n    setOpenForSendDirectMessage(true);\r\n  };\r\n  const handleCloseForSendDirectMessage = () => {\r\n    setOpenForSendDirectMessage(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n\r\n\r\n\r\n    \r\n      <div>\r\n        <Toolbar \r\n          sx={{bgcolor: \"purple\"}}\r\n        />\r\n        \r\n\r\n        <List onClick={() => returnToHome()}>\r\n          <ListItemButton>\r\n            <ListItemIcon>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Home\" />\r\n          </ListItemButton>\r\n        </List>\r\n\r\n        \r\n\r\n        <List>\r\n          <ListItemButton onClick={handleClickOpenChannel}>\r\n            <ListItemIcon>\r\n              <GroupIcon />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary={`My Channels (${channels ? channels.length : 0})`}\r\n            />\r\n            {openChannel ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n          </ListItemButton>\r\n          <Collapse in={openChannel} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {channels ? (\r\n                channels.map((channel) => {\r\n                  return (\r\n                    <ListItemButton\r\n                      sx={{ pl: 4 }}\r\n                      key={channel.id}\r\n                      onClick={() => {\r\n                        intervalRetrieveMessages(channel.id);\r\n                        setSelectedChannel(channel);\r\n                      }}\r\n                    >\r\n                      <ListItemText primary={`${channel.name}`} />\r\n                    </ListItemButton>\r\n                  );\r\n                })\r\n              ) : (\r\n                <ListItemButton sx={{ pl: 4 }}>\r\n                  <ListItemText primary={`No users Available`} />\r\n                </ListItemButton>\r\n              )}\r\n            </List>\r\n          </Collapse>\r\n        </List>\r\n\r\n        \r\n\r\n        <List>\r\n          <ListItemButton onClick={() => handleClickOpenForInviteUser()}>\r\n            <ListItemIcon>\r\n              <GroupAddIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Create New Channel...\" />\r\n            <AddIcon />\r\n          </ListItemButton>\r\n        </List>\r\n\r\n        \r\n\r\n        <List>\r\n          <ListItemButton onClick={() => handleClickOpenSendDirectMessage()}>\r\n            <ListItemIcon>\r\n              <ForumIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Send a Direct Message\" />\r\n            <SendIcon />\r\n          </ListItemButton>\r\n        </List>\r\n\r\n        \r\n\r\n        <List>\r\n          <ListItemButton onClick={handleClickOpenUsers}>\r\n            <ListItemIcon>\r\n              <ChatBubbleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary={`All Users (reduced to ${users.slice(0, 20).length})`}\r\n            />\r\n            {openUsers ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n          </ListItemButton>\r\n          <Collapse in={openUsers} timeout=\"auto\" unmountOnExit>\r\n            <List>\r\n              {users.slice(0, 20).map((val) => {\r\n                return (\r\n                  <ListItemButton sx={{ pl: 4 }} key={val.id}>\r\n                    <ListItemText primary={`${val.uid}`} />\r\n                  </ListItemButton>\r\n                );\r\n              })}\r\n            </List>\r\n          </Collapse>\r\n        </List>\r\n\r\n        \r\n      </div>\r\n\r\n      {/* For Create Channel */}\r\n      <FormDialoguesComponent\r\n        open={openForInviteUser}\r\n        handleClose={handleCloseForInviteUser}\r\n        dialogTitleText={\"Enter New Channel Name You Want to Create\"}\r\n        label={\"Channel Name\"}\r\n        type={`text`}\r\n        createNewChannelWithUser={createNewChannelWithUser}\r\n        isCreateChannel={isCreateChannel}\r\n        setIsCreateChannel={setIsCreateChannel}\r\n      />\r\n      {/* For Send a DM Modal */}\r\n      <FormDialoguesComponent\r\n        open={openForSendDirectMessage}\r\n        handleClose={handleCloseForSendDirectMessage}\r\n        dialogTitleText={\"Who do you want to send a message to?\"}\r\n        label={\"Email\"}\r\n        type={`text`}\r\n        users={users}\r\n        sortByEmail={sortByEmail}\r\n        searchResults={searchResults}\r\n        intervalRetrieveMessagesWithUser={intervalRetrieveMessagesWithUser}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidebarComponent;\r\n","import { useState } from \"react\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FormDialoguesComponent from \"./FormDialoguesComponent\";\r\n\r\nconst TopBarComponent = ({\r\n  drawerWidth,\r\n  headers,\r\n  handleDrawerToggle,\r\n  channels,\r\n  selectedChannel,\r\n  inviteUserToAChannel,\r\n  userID,\r\n  selectedUser,\r\n  currentDateAndTime,\r\n  userInviteError,\r\n  setUserInviteError,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        className=\"appbar\"\r\n        position=\"fixed\"\r\n        sx={{\r\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n          ml: { sm: `${drawerWidth}px` },\r\n        }}\r\n      >\r\n        <Toolbar\r\n          style={{ backgroundColor: \"purple\", justifyContent: \"space-between\" }}\r\n        >\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"end\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2, display: { sm: \"none\" } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          {selectedChannel.name ? (\r\n            <Box onClick={() => handleClickOpen()}>\r\n              <ListItemButton>\r\n                <PersonAddIcon sx={{ mr: 1 }} />\r\n                <Typography variant=\"h7\" noWrap component=\"div\">\r\n                  {`Invite`}\r\n                </Typography>\r\n              </ListItemButton>\r\n            </Box>\r\n          ) : (\r\n            <Box>\r\n              {`${currentDateAndTime.currentDate}, ${currentDateAndTime.currentTime}`}\r\n            </Box>\r\n          )}\r\n\r\n          {selectedChannel.name || selectedUser.email ? (\r\n            <Box>\r\n              <ListItemButton>\r\n                <Typography variant=\"h7\" noWrap component=\"div\">\r\n                  {selectedChannel.name && `Channel: ${selectedChannel.name}`}{\" \"}\r\n                  {selectedUser.email && `Chat with ${selectedUser.email}`}\r\n                </Typography>\r\n              </ListItemButton>\r\n            </Box>\r\n          ) : (\r\n            <Box>\r\n              <ListItemButton>\r\n                <Typography variant=\"h7\" noWrap component=\"div\">\r\n                  {\"Avion Slack App\"}\r\n                </Typography>\r\n              </ListItemButton>\r\n            </Box>\r\n          )}\r\n\r\n          <Box style={{ textAlign: \"end\" }}>\r\n            <Typography variant=\"h12\" component=\"div\">\r\n              {`${headers.uid} ID: ${userID}`}\r\n            </Typography>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Form Dialogues */}\r\n      <FormDialoguesComponent\r\n        open={open}\r\n        handleClose={handleClose}\r\n        dialogTitleText={\r\n          selectedChannel &&\r\n          `Enter email to invite to ${selectedChannel.name}`\r\n        }\r\n        channels={channels}\r\n        type={\"text\"}\r\n        label={\"Email\"}\r\n        inviteUserToAChannel={inviteUserToAChannel}\r\n        userInviteError={userInviteError}\r\n        setUserInviteError={setUserInviteError}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopBarComponent;\r\n","import Toolbar from '@mui/material/Toolbar';\r\nimport Box from '@mui/material/Box';\r\nimport TextField  from \"@mui/material/TextField\";\r\n\r\nconst ChatBodyComponent = ({allMessagesRetrieved, setMessage, message, createMessageInAChannel, selectedChannel, selectedUser, createDirectMessageToAUser}) => {\r\n    return (\r\n        <Box component=\"main\" sx={{flexGrow: 1, p: 3}}>\r\n          <Toolbar />\r\n          <Box\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              padding: \"0 20px 150px \",\r\n            }}\r\n          >\r\n            {allMessagesRetrieved?.length >= 1 ? allMessagesRetrieved.map((val) => {\r\n              return (\r\n              <div key={val.id}>\r\n              <span>\r\n             {`${val.sender.email} says at ${val.created_at}: `}</span>   \r\n             <p>{val.body}</p>\r\n             </div>              \r\n              )\r\n            }) : \r\n            \r\n            (selectedChannel.name && <span className=\"greetings\">Channel: {selectedChannel.name} has no messages.</span>) || \r\n            (selectedUser.email && <span className=\"greetings\">You have no chat history with {selectedUser.email}. Send him/her a message!</span>) ||            \r\n            <span className=\"greetings\">Welcome to Avion Slack App! Hop on a channel or send a DM to get started!👀</span>}\r\n\r\n            \r\n\r\n\r\n          </Box>\r\n\r\n          {selectedChannel.name && <Box\r\n            className=\"message-area-container\"\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={(e) => {e.preventDefault(); createMessageInAChannel(message); setMessage(\"\")}}\r\n          >\r\n            <TextField\r\n              className=\"message-area\"\r\n              id=\"outlined-basic\"\r\n              label=\"Enter your message here\"\r\n              variant=\"outlined\"\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              value={message}\r\n            />\r\n          </Box>}\r\n\r\n          {selectedUser.email && <Box\r\n            className=\"message-area-container\"\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={(e) => {e.preventDefault(); createDirectMessageToAUser(message); setMessage(\"\")}}\r\n          >\r\n            <TextField\r\n              className=\"message-area\"\r\n              id=\"outlined-basic\"\r\n              label=\"Enter your message here\"\r\n              variant=\"outlined\"\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              value={message}\r\n            />\r\n          </Box>}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChatBodyComponent\r\n","import Box from \"@mui/material/Box\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport SidebarComponent from \"./SidebarComponent\";\r\nimport TopBarComponent from \"./TopBarComponent\";\r\nimport ChatBodyComponent from \"./ChatBodyComponent\";\r\n\r\nconst MainChatComponent = ({\r\n  headers,\r\n  users,\r\n  channels,\r\n  handleClickOpenChannel,\r\n  openChannel,\r\n  inviteUserToAChannel,\r\n  createNewChannelWithUser,\r\n  handleClickOpenUsers,\r\n  openUsers,\r\n  handleDrawerToggle,\r\n  mobileOpen,\r\n  allMessagesRetrieved,\r\n  message,\r\n  setMessage,\r\n  isAChannelSelected,\r\n  selectedChannel,\r\n  setSelectedChannel,\r\n  createMessageInAChannel,\r\n  intervalRetrieveMessages,\r\n  userID,\r\n  returnToHome,\r\n  sortByEmail,\r\n  searchResults,\r\n  selectedUser,\r\n  createDirectMessageToAUser,\r\n  intervalRetrieveMessagesWithUser,\r\n  currentDateAndTime,\r\n  isCreateChannel,\r\n  setIsCreateChannel,\r\n  userInviteError,\r\n  setUserInviteError,\r\n}) => {\r\n  const drawerWidth = 300;\r\n  //   const {window} = props;\r\n  //   const container =\r\n  //     window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ display: \"flex\" }}>\r\n        <CssBaseline />\r\n        <TopBarComponent\r\n          drawerWidth={300}\r\n          headers={headers}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          isAChannelSelected={isAChannelSelected}\r\n          selectedChannel={selectedChannel}\r\n          inviteUserToAChannel={inviteUserToAChannel}\r\n          userID={userID}\r\n          selectedUser={selectedUser}\r\n          currentDateAndTime={currentDateAndTime}\r\n          userInviteError={userInviteError}\r\n          setUserInviteError={setUserInviteError}\r\n        />\r\n        <Box\r\n          component=\"nav\"\r\n          sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n          aria-label=\"mailbox folders\"\r\n        >\r\n          <Drawer\r\n            // container={container}\r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n            sx={{\r\n              display: { xs: \"block\", sm: \"none\" },\r\n              \"& .MuiDrawer-paper\": {\r\n                boxSizing: \"border-box\",\r\n                width: drawerWidth,\r\n              },\r\n            }}\r\n          >\r\n            {\r\n              <SidebarComponent\r\n                handleClickOpenChannel={handleClickOpenChannel}\r\n                openChannel={openChannel}\r\n                createNewChannelWithUser={createNewChannelWithUser}\r\n                handleClickOpenUsers={handleClickOpenUsers}\r\n                users={users}\r\n                openUsers={openUsers}\r\n                setSelectedChannel={setSelectedChannel}\r\n                intervalRetrieveMessages={intervalRetrieveMessages}\r\n                returnToHome={returnToHome}\r\n                sortByEmail={sortByEmail}\r\n                searchResults={searchResults}\r\n                intervalRetrieveMessagesWithUser={\r\n                  intervalRetrieveMessagesWithUser\r\n                }\r\n                channels={channels}\r\n                isCreateChannel={isCreateChannel}\r\n                setIsCreateChannel={setIsCreateChannel}\r\n              />\r\n            }\r\n          </Drawer>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            sx={{\r\n              display: { xs: \"none\", sm: \"block\" },\r\n              \"& .MuiDrawer-paper\": {\r\n                boxSizing: \"border-box\",\r\n                width: drawerWidth,\r\n              },\r\n            }}\r\n            open\r\n          >\r\n            {\r\n              <SidebarComponent\r\n                handleClickOpenChannel={handleClickOpenChannel}\r\n                openChannel={openChannel}\r\n                createNewChannelWithUser={createNewChannelWithUser}\r\n                handleClickOpenUsers={handleClickOpenUsers}\r\n                users={users}\r\n                openUsers={openUsers}\r\n                setSelectedChannel={setSelectedChannel}\r\n                intervalRetrieveMessages={intervalRetrieveMessages}\r\n                returnToHome={returnToHome}\r\n                sortByEmail={sortByEmail}\r\n                searchResults={searchResults}\r\n                intervalRetrieveMessagesWithUser={\r\n                  intervalRetrieveMessagesWithUser\r\n                }\r\n                channels={channels}\r\n                isCreateChannel={isCreateChannel}\r\n                setIsCreateChannel={setIsCreateChannel}\r\n              />\r\n            }\r\n          </Drawer>\r\n        </Box>\r\n        <ChatBodyComponent\r\n          allMessagesRetrieved={allMessagesRetrieved}\r\n          setMessage={setMessage}\r\n          message={message}\r\n          createMessageInAChannel={createMessageInAChannel}\r\n          selectedChannel={selectedChannel}\r\n          selectedUser={selectedUser}\r\n          createDirectMessageToAUser={createDirectMessageToAUser}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainChatComponent;\r\n","import React from \"react\";\r\nimport Loaders from \"./Loaders\";\r\nimport useHooks from \"./hooks\";\r\nimport MainChatComponent from \"./MainChatComponent\";\r\nimport \"./styles.css\";\r\n\r\nconst Index = () => {\r\n  const {\r\n    headers,\r\n    users,\r\n    channels,\r\n    handleClickOpenChannel,\r\n    openChannel,\r\n    inviteUserToAChannel,\r\n    createNewChannelWithUser,\r\n    handleClickOpenUsers,\r\n    openUsers,\r\n    handleDrawerToggle,\r\n    mobileOpen,\r\n    allMessagesRetrieved,\r\n    message,\r\n    setMessage,\r\n    isAChannelSelected,\r\n    selectedChannel,\r\n    setSelectedChannel,\r\n    createMessageInAChannel,\r\n    intervalRetrieveMessages,\r\n    userID,\r\n    returnToHome,\r\n    sortByEmail,\r\n    searchResults,\r\n    selectedUser,\r\n    createDirectMessageToAUser,\r\n    intervalRetrieveMessagesWithUser,\r\n    loading,\r\n    currentDateAndTime,\r\n    isCreateChannel,\r\n    setIsCreateChannel,\r\n    userInviteError,\r\n    setUserInviteError,\r\n  } = useHooks();\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loaders loading={loading} />\r\n      ) : (\r\n        <MainChatComponent\r\n          headers={headers}\r\n          users={users}\r\n          channels={channels}\r\n          handleClickOpenChannel={handleClickOpenChannel}\r\n          openChannel={openChannel}\r\n          inviteUserToAChannel={inviteUserToAChannel}\r\n          createNewChannelWithUser={createNewChannelWithUser}\r\n          handleClickOpenUsers={handleClickOpenUsers}\r\n          openUsers={openUsers}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          mobileOpen={mobileOpen}\r\n          allMessagesRetrieved={allMessagesRetrieved}\r\n          message={message}\r\n          setMessage={setMessage}\r\n          isAChannelSelected={isAChannelSelected}\r\n          selectedChannel={selectedChannel}\r\n          setSelectedChannel={setSelectedChannel}\r\n          createMessageInAChannel={createMessageInAChannel}\r\n          intervalRetrieveMessages={intervalRetrieveMessages}\r\n          userID={userID}\r\n          returnToHome={returnToHome}\r\n          sortByEmail={sortByEmail}\r\n          searchResults={searchResults}\r\n          selectedUser={selectedUser}\r\n          createDirectMessageToAUser={createDirectMessageToAUser}\r\n          intervalRetrieveMessagesWithUser={intervalRetrieveMessagesWithUser}\r\n          currentDateAndTime={currentDateAndTime}\r\n          isCreateChannel={isCreateChannel}\r\n          setIsCreateChannel={setIsCreateChannel}\r\n          userInviteError={userInviteError}\r\n          setUserInviteError={setUserInviteError}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,  \r\n} from \"react-router-dom\";\r\nimport Home from '../Home'\r\nimport Chat from '../Chat'\r\n\r\nconst Routes = () => {\r\n    return (\r\n      <>\r\n      <Router>              \r\n           <Switch>           \r\n            <Route exact path=\"/\" comp={Home}>\r\n              <Home />\r\n            </Route>            \r\n            <Route exact path=\"/chat\" comp={Chat}>\r\n              <Chat />\r\n            </Route>          \r\n          </Switch>       \r\n      </Router>\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default Routes","import './App.css';\nimport Routes from './components/Routes'\n\n\nconst App = () => { \n\n  \n  return (\n    \n<Routes/>\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}